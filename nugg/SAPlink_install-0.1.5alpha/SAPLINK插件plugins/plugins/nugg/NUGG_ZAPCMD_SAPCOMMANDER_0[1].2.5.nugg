<?xml version="1.0" encoding="iso-8859-1"?>
<nugget name="ZAPCMD_SAPCOMMANDER_0.2.5">
 <CLAS CLSNAME="ZAPCMD_CL_SERVER_FILE" VERSION="1" LANGU="D" DESCRIPT="Datei auf dem applikationsssever" UUID="DF3651A8ECF9B146A5BF071C14EE9998" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="20071021" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZAPCMD_CL_FILE" CHANGEDBY="BCUSER">
  <publicSection>class ZAPCMD_CL_SERVER_FILE definition
  public
  inheriting from ZAPCMD_CL_FILE
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_SERVER_FILE
*&quot;* do not include other source files here!!!
public section.

  methods CONSTRUCTOR .

  methods DELETE
    redefinition .
  methods EXECUTE
    redefinition .
  methods READ_BIN
    redefinition .
  methods READ_TEXT
    redefinition .
  methods WRITE_BIN
    redefinition .
  methods WRITE_TEXT
    redefinition .
  methods RENAME
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_SERVER_FILE
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_SERVERFILE
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" STATE="1" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071021">
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="DELETE"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="EXECUTE"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="READ_BIN"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="READ_TEXT"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="RENAME"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="WRITE_BIN"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="WRITE_TEXT"/>
  </inheritance>
  <method CLSNAME="ZAPCMD_CL_SERVER_FILE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.

* ...
    call method super-&gt;constructor.
    if sy-opsys = &apos;Windows NT&apos; or sy-opsys = &apos;DOS&apos;.
      separator = &apos;\&apos;.
    else.
      separator = &apos;/&apos;.
    endif.
    server_area = &apos;A&apos;.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="DELETE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DELETE.

*    CALL FUNCTION &apos;DX_FILE_DELETE&apos;
*       EXPORTING
**     FILETYPE                          =
*         FILENAME                          = full_name
*       EXCEPTIONS
*         FILE_HANDLING_ERROR               = 1
*         NO_AUTHORITY_TO_DELETE_FILE       = 2
*         FILE_DOESNOT_EXIST                = 3
*         FILE_IS_USED                      = 4
*         DB_ERROR                          = 5
*         OTHERS                            = 6
*                .
    delete dataset full_name.
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
           WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="EXECUTE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTE.

*        ZAPCMD_CL_EDITOR=&gt;call_editor(
*          pf_file = me
*          pf_readonly = &apos;X&apos;
*        ).


    DATA lf_destfile TYPE REF TO ZAPCMD_cl_file.
    DATA lf_destdir TYPE REF TO ZAPCMD_cl_frontend_dir.
    DATA lt_file TYPE ZAPCMD_tbl_xstring.

    create object lf_destdir type zapcmd_cl_frontend_dir.
    lf_destdir-&gt;init( ).

     CALL METHOD lf_destdir-&gt;create_file
        EXPORTING
          pf_filename = me-&gt;name
        IMPORTING
          pf_file     = lf_destfile.

      DATA lf_filesize TYPE i.

      CALL METHOD me-&gt;read_bin
        IMPORTING
          pt_file     = lt_file
          pf_filesize = lf_filesize.

      CALL METHOD lf_destfile-&gt;write_bin
        EXPORTING
          pt_file     = lt_file
          pf_filesize = lf_filesize.

      lf_destfile-&gt;execute( ).
*    data lf_string type string.
*    data lt_string type table of string.
*    data ok_code type sy-ucomm.
*
**** Datei oeffen ***
*    open dataset full_name for input in text mode encoding default.
*    if sy-subrc eq 0.
*      do.
**** jede Zeile einzeln einlesen ***
*        read dataset full_name into lf_string.
*        if sy-subrc ne 0.
*          exit.
*        else.
*          append lf_string to lt_string.
*        endif.
*      enddo.
*      close dataset full_name.
*    else.
*      message id sy-msgid type &apos;I&apos; number sy-msgno
*      with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*      exit.
*    endif.
*
**----------------------------------------------------------------------
**
** Editor aufrufen für die interne Tabelle
**
**----------------------------------------------------------------------
**
*
*    editor-call for lt_string.
*    ok_code = sy-ucomm.
*
** Bei User-Wahl beenden
*    if ok_code eq &apos;WB_CANCEL&apos; or
*    ok_code eq &apos;WB_END&apos; or
*    ok_code eq &apos;WB_BACK&apos;.
*      exit.
*    endif.
*
*    if ok_code eq &apos;WB_SAVE&apos;.
*
**----------------------------------------------------------------------
**
** Änderungen von Editor in Datei zurückschreiben
**
**----------------------------------------------------------------------
**
**      open dataset full_name for output in text mode.
**      if sy-subrc eq 0.
**        loop at lt_string into lf_string.
**          transfer lf_string to full_name.
**        endloop.
**        close dataset full_name.
**      else.
**        message id sy-msgid type &apos;I&apos; number sy-msgno
**        with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
**        exit.
**      endif.
*
*    endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_BIN" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method READ_BIN.

    data lf_string like line of pt_file.
    data lf_subrc type sysubrc.
    data lf_length type i.
    data lf_mess(100) type c.
    refresh pt_file.
*** Datei oeffen ***
    pf_filesize = 0.
    open dataset full_name for input in binary mode
      message lf_mess. &quot;encoding default.
    if sy-subrc eq 0.
      do.
*** jede Zeile einzeln einlesen ***
        clear lf_string.
        read dataset full_name into lf_string length lf_length.
        lf_subrc = sy-subrc.
        append lf_string to pt_file.
        pf_filesize = pf_filesize + lf_length.
        if lf_subrc ne 0.
          exit.
        endif.
      enddo.
      close dataset full_name.
    else.
      message id sy-msgid type &apos;I&apos; number sy-msgno
      with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      exit.
    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_TEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method READ_TEXT.

    data lf_string type line of zapcmd_tbl_string.
    data lf_length type i.
    refresh pt_file.
    pf_filesize = 0.
*** Datei oeffen ***
    open dataset full_name for input in text mode encoding default.
    if sy-subrc eq 0.
      do.
*** jede Zeile einzeln einlesen ***
        read dataset full_name into lf_string length lf_length.
        if sy-subrc ne 0.
          exit.
        else.
          append lf_string to pt_file.
          pf_filesize = pf_filesize + lf_length.
        endif.
      enddo.
      close dataset full_name.
    else.
      message id sy-msgid type &apos;I&apos; number sy-msgno
      with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      exit.
    endif.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="RENAME" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method RENAME.

data lf_oldlongname type zapcmd_fullname.

 lf_oldlongname = me-&gt;full_name.

CALL METHOD SUPER-&gt;RENAME
  EXPORTING
    PF_NEWNAME = PF_NEWNAME
    .

data lf_command type string.
data lf_parameter type string.
if separator = &apos;\&apos;.
  concatenate lf_oldlongname name into lf_parameter
    separated by space.
  lf_command = &apos;ren&apos;.
else.
  concatenate lf_oldlongname full_name into lf_parameter
    separated by space.
  lf_command = &apos;mv&apos;.
endif.
 call method exec_server
      exporting
        pf_command = lf_command
        pf_parameter = lf_parameter .

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_BIN" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WRITE_BIN.

    data lf_string like line of pt_file.
    data lf_filesize type i.
    lf_filesize = pf_filesize.
    open dataset full_name for output in binary mode. &quot;encoding default.
    if sy-subrc eq 0.
      loop at pt_file into lf_string.
        if lf_filesize &gt;= 1024.
          transfer lf_string to full_name.
          lf_filesize = lf_filesize - 1024.
        else.
          transfer lf_string to full_name length lf_filesize.
        endif.
      endloop.
      close dataset full_name.
    else.
      message id sy-msgid type &apos;I&apos; number sy-msgno
      with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      exit.
    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_TEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WRITE_TEXT.

    data lf_string type string.

    open dataset full_name for output in text mode encoding default.
    if sy-subrc eq 0.
      loop at pt_file into lf_string.
        transfer lf_string to full_name.
      endloop.
      close dataset full_name.
    else.
      message id sy-msgid type &apos;I&apos; number sy-msgno
      with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      exit.
    endif.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_SERVER_DIR" VERSION="1" LANGU="D" DESCRIPT="Ein Verzeichnis auf dem Appl-Server" UUID="2C5CF9ACE7813447B680DD18647B7260" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="20071021" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZAPCMD_CL_DIR" CHANGEDBY="BCUSER">
  <publicSection>class ZAPCMD_CL_SERVER_DIR definition
  public
  inheriting from ZAPCMD_CL_DIR
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_SERVER_DIR
*&quot;* do not include other source files here!!!
public section.
  type-pools ICON .

  methods CONSTRUCTOR .

  methods CREATE_DIR
    redefinition .
  methods CREATE_FILE
    redefinition .
  methods DELETE
    redefinition .
  methods EXECUTE
    redefinition .
  methods GET_FREESPACE
    redefinition .
  methods GET_TOOLBAR
    redefinition .
  methods INIT
    redefinition .
  methods READ_DIR
    redefinition .
  methods RENAME
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_SERVER_DIR
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_SERVER_DIR
*&quot;* do not include other source files here!!!
private section.


    methods READ_DRIVES
      exporting
        value(PT_FILELIST) type ZAPCMD_TBL_FILELIST .

    methods READ_SERVER
      exporting
        value(PT_FILELIST) type ZAPCMD_TBL_FILELIST .

    methods READ_AL11
      exporting
        value(PT_FILELIST) type ZAPCMD_TBL_FILELIST .</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZAPCMD_CL_SERVER_DIR" TYPEGROUP="ICON" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ICON</forwardDeclaration>
  <inheritance CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" STATE="1" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071021">
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="CREATE_DIR"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="CREATE_FILE"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="DELETE"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="EXECUTE"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="GET_FREESPACE"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="GET_TOOLBAR"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="INIT"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="READ_DIR"/>
   <redefinition CLSNAME="ZAPCMD_CL_SERVER_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="RENAME"/>
  </inheritance>
  <method CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.

* ...
    call method super-&gt;constructor.
    if sy-opsys = &apos;Windows NT&apos; or sy-opsys = &apos;DOS&apos;.
      separator = &apos;\&apos;.
    else.
      separator = &apos;/&apos;.
    endif.
    server_area = &apos;A&apos;.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_DIR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_DIR.

    create object pf_file type Zapcmd_CL_SERVER_DIR.

    call method pf_file-&gt;init
      EXPORTING
        pf_name    = pf_filename
        pf_size    = 0
        pf_dir     = full_name
        pf_moddate = sy-datum
        pf_modtime = sy-uzeit
        pf_attr    = space.

    call method exec_server
      exporting
        pf_command = &apos;mkdir&apos;
        pf_parameter = pf_file-&gt;full_name.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_FILE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_FILE.

    create object pf_file type ZAPCMD_CL_SERVER_FILE.

    call method pf_file-&gt;init
      EXPORTING
        pf_name    = pf_filename
        pf_size    = 0
        pf_dir     = full_name
        pf_moddate = sy-datum
        pf_modtime = sy-uzeit
        pf_attr    = space.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="DELETE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DELETE.

*    data lf_filename type DXFILE-FILENAME.
*    lf_filename = full_name.
*
*    CALL FUNCTION &apos;DX_FILE_DELETE&apos;
*     EXPORTING
*       FILETYPE                          = &apos;P&apos;
*       FILENAME                          = lf_filename
*     EXCEPTIONS
*       FILE_HANDLING_ERROR               = 1
*       NO_AUTHORITY_TO_DELETE_FILE       = 2
*       FILE_DOESNOT_EXIST                = 3
*       FILE_IS_USED                      = 4
*       DB_ERROR                          = 5
*       OTHERS                            = 6
*              .
*    IF SY-SUBRC &lt;&gt; 0.
*      MESSAGE ID SY-MSGID TYPE &apos;I&apos; NUMBER SY-MSGNO
*           WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*    ENDIF.

  call method exec_server
    exporting
      pf_command = &apos;rmdir&apos;
      pf_parameter = full_name.



endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="EXECUTE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTE.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_FREESPACE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method GET_FREESPACE.

     data lf_pathname type DEF_PAR_FU-PATHNAME.
    data lf_freespace type DEF_PAR_FU-FREESPACE.
    lf_pathname = full_name.

    CALL FUNCTION &apos;SHOW_FILEPATH_FREESPACE&apos; &quot;FREESPACE FROM OSCOL
     EXPORTING
        file_path = lf_pathname
        dest_type = &apos;L&apos;
     IMPORTING
        free_space = lf_freespace
     EXCEPTIONS
       cant_find_destination    = 1
       cant_get_destinations    = 1
       OTHERS                   = 4.
    if sy-subrc &lt;&gt; 0.
      lf_freespace = 0.
    endif.
*   Umwandlung von KByte in Byte
    pf_space = lf_freespace * 1024.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_TOOLBAR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method GET_TOOLBAR.

    data ls_toolbar type STB_BUTTON.

    CLEAR ls_toolbar.
    MOVE 0 TO ls_toolbar-butn_type.
    MOVE co_frontend TO ls_toolbar-function.
    MOVE ICON_WORKPLACE TO ls_toolbar-icon.
    MOVE &apos;Frontend&apos;(220) to ls_toolbar-text.
    MOVE &apos;Präsentationsserver&apos;(221) TO ls_toolbar-quickinfo.
    MOVE SPACE TO ls_toolbar-disabled.
    APPEND ls_toolbar TO pt_toolbar.

    CLEAR ls_toolbar.
    MOVE 0 TO ls_toolbar-butn_type.
    MOVE co_server TO ls_toolbar-function.
    MOVE ICON_SYM_ALT_SERVER TO ls_toolbar-icon.
    MOVE &apos;Server&apos;(234) to ls_toolbar-text.
    MOVE &apos;Server&apos;(235) TO ls_toolbar-quickinfo.
    MOVE SPACE TO ls_toolbar-disabled.
    APPEND ls_toolbar TO pt_toolbar.

    CLEAR ls_toolbar.
    MOVE 0 TO ls_toolbar-butn_type.
    MOVE co_al11 TO ls_toolbar-function.
    MOVE ICON_ADDRESS TO ls_toolbar-icon.
    MOVE &apos;AL11&apos;(236) to ls_toolbar-text.
    MOVE &apos;Verzeichnisse aus der AL11&apos;(237) TO ls_toolbar-quickinfo.
    MOVE SPACE TO ls_toolbar-disabled.
    APPEND ls_toolbar TO pt_toolbar.


    if separator = &apos;\&apos;.
      CLEAR ls_toolbar.
      MOVE 0 TO ls_toolbar-butn_type.
      MOVE co_drives TO ls_toolbar-function.
      MOVE ICON_FOLDER TO ls_toolbar-icon.
      MOVE &apos;Laufwerke&apos;(232) to ls_toolbar-text.
      MOVE &apos;Laufmerke&apos;(233) TO ls_toolbar-quickinfo.
      MOVE SPACE TO ls_toolbar-disabled.
      APPEND ls_toolbar TO pt_toolbar.
    endif.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="INIT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method INIT.
 call method super-&gt;init
      EXPORTING
        pf_name      = pf_name
        pf_full_name = pf_full_name
        pf_size      = pf_size
        pf_moddate   = pf_moddate
        pf_modtime   = pf_modtime
        pf_attr      = pf_attr
        pf_dir       = pf_dir.

    if full_name is initial.


      data lf_temp(255) type c.
      call &apos;C_SAPGPARAM&apos; id &apos;NAME&apos;  field &apos;DIR_HOME&apos;
                         id &apos;VALUE&apos; field lf_temp.

      full_name = lf_temp.
      if full_name = &apos;.&apos;.
        if separator = &apos;\&apos;.
          full_name = &apos;C:\&apos;.
        else.
          full_name = separator.
        endif.
      endif.


    endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="READ_AL11" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="READ_AL11" SCONAME="PT_FILELIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <source>method READ_AL11.

* ...
    data lf_name type string.

    data lf_ref_file type ref to ZAPCMD_CL_KNOT.

    types:
    begin of ZAVL_AL11,
      name(40) type c,
      dirname(1024) type c,
    end of ZAVL_AL11.

    data ls_names type ZAVL_AL11.
    data lt_names type table of ZAVL_AL11.
    data lt_searchnames type table of char40.

    append &apos;DIR_ATRA&apos; to lt_searchnames.
    append &apos;DIR_BINARY&apos; to lt_searchnames.
    append &apos;DIR_CT_LOGGING&apos; to lt_searchnames.
    append &apos;DIR_CT_RUN&apos; to lt_searchnames.
    append &apos;DIR_DATA&apos; to lt_searchnames.
    append &apos;DIR_DBMS&apos; to lt_searchnames.
    append &apos;DIR_EXECUTABLE&apos; to lt_searchnames.
    append &apos;DIR_EXE_ROOT&apos; to lt_searchnames.
    append &apos;DIR_GEN&apos; to lt_searchnames.
    append &apos;DIR_GEN_ROOT&apos; to lt_searchnames.
    append &apos;DIR_GLOBAL&apos; to lt_searchnames.
    append &apos;DIR_GRAPH_EXE&apos; to lt_searchnames.
    append &apos;DIR_GRAPH_LIB&apos; to lt_searchnames.
    append &apos;DIR_HOME&apos; to lt_searchnames.
    append &apos;DIR_INSTALL&apos; to lt_searchnames.
    append &apos;DIR_INSTANCE&apos; to lt_searchnames.
    append &apos;DIR_LIBRARY&apos; to lt_searchnames.
    append &apos;DIR_LOGGING&apos; to lt_searchnames.
    append &apos;DIR_MEMORY_INSPECTOR&apos; to lt_searchnames.
    append &apos;DIR_PAGING&apos; to lt_searchnames.
    append &apos;DIR_PUT&apos; to lt_searchnames.
    append &apos;DIR_PERF&apos; to lt_searchnames.
    append &apos;DIR_PROFILE&apos; to lt_searchnames.
    append &apos;DIR_PROTOKOLLS&apos; to lt_searchnames.
    append &apos;DIR_REORG&apos; to lt_searchnames.
    append &apos;DIR_ROLL&apos; to lt_searchnames.
    append &apos;DIR_RSYN&apos; to lt_searchnames.
    append &apos;DIR_SAPUSERS&apos; to lt_searchnames.
    append &apos;DIR_SETUPS&apos; to lt_searchnames.
    append &apos;DIR_SORTTMP&apos; to lt_searchnames.
    append &apos;DIR_SOURCE&apos; to lt_searchnames.
    append &apos;DIR_TEMP&apos; to lt_searchnames.
    append &apos;DIR_TRANS&apos; to lt_searchnames.
    append &apos;DIR_TRFILES&apos; to lt_searchnames.
    append &apos;DIR_TRSUB&apos; to lt_searchnames.
    loop at lt_searchnames into ls_names-name.
      CALL &apos;C_SAPGPARAM&apos; ID &apos;NAME&apos;  FIELD ls_names-name
                     ID &apos;VALUE&apos; FIELD ls_names-dirname.
      IF ls_names-dirname = &apos;.&apos;.
        IF sy-opsys = &apos;Windows NT&apos;.
          ls_names-dirname = &apos;.\&apos;.
        ELSE.
          ls_names-dirname = &apos;./&apos;.
        ENDIF.
      ENDIF.

      append ls_names to lt_names.
    endloop.

    CASE sy-dbsys(3).
      WHEN &apos;ORA&apos;.
        CALL &apos;C_SAPGPARAM&apos; ID &apos;NAME&apos;  FIELD &apos;DIR_ORAHOME&apos;
                           ID &apos;VALUE&apos; FIELD ls_names-dirname.
        ls_names-name = &apos;DIR_ORAHOME&apos;.
        append ls_names to lt_names.
      WHEN &apos;ADA&apos;.
        CALL &apos;C_GETENV&apos; ID &apos;NAME&apos;  FIELD &apos;DBROOT&apos;
                        ID &apos;VALUE&apos; FIELD ls_names-dirname.
        ls_names-name = &apos;DIR_ADA_DBROOT&apos;.
        append ls_names to lt_names.
      WHEN &apos;INF&apos;.
        CALL &apos;C_GETENV&apos; ID &apos;NAME&apos;  FIELD &apos;INFORMIXDIR&apos;
                        ID &apos;VALUE&apos; FIELD ls_names-dirname.
        ls_names-name = &apos;DIR_INF_INFORMIXDIR&apos;.
        append ls_names to lt_names.
      WHEN &apos;DB6&apos;.
        CALL &apos;C_GETENV&apos; ID &apos;NAME&apos;  FIELD &apos;INSTHOME&apos;
                        ID &apos;VALUE&apos; FIELD ls_names-dirname.
        IF SY-SUBRC = 0.
          ls_names-name = &apos;DIR_DB2_HOME&apos;.
          append ls_names to lt_names.
        ENDIF.
      WHEN OTHERS.
    ENDCASE.
    sort lt_names by name.


    DATA: my_name(20) type c.
*  get the name of the current server.
    CALL &apos;C_SAPGPARAM&apos; ID &apos;NAME&apos; FIELD &apos;rdisp/myname&apos;
                       ID &apos;VALUE&apos; FIELD my_name.

    data lt_searchpoints type table of user_dir.
    data ls_searchpoints type user_dir.


* get the name and aliases of ALL userdefined directories
    SELECT * FROM user_dir INTO ls_searchpoints
      WHERE svrname = my_name.
      APPEND ls_searchpoints to lt_searchpoints.
    ENDSELECT.
    SELECT * FROM user_dir INTO ls_searchpoints
      WHERE svrname = &apos;all&apos;.
      APPEND ls_searchpoints to lt_searchpoints.
    ENDSELECT.

    LOOP AT lt_searchpoints into ls_searchpoints.
      ls_names-name = ls_searchpoints-aliass.
      ls_names-dirname = ls_searchpoints-dirname.
      append ls_names to lt_names.
    ENDLOOP.

    loop at lt_names into ls_names.
      create object lf_ref_file type ZAPCMD_CL_SERVER_DIR.
      call method lf_ref_file-&gt;init
        EXPORTING
          pf_full_name = ls_names-dirname
          pf_name      = ls_names-name
          pf_size      = 0
          pf_dir       = full_name.

      append lf_ref_file to pt_filelist.
    endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="READ_DIR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method READ_DIR.


    data lf_ref_file type ref to Zapcmd_CL_KNOT.
*    data lt_filelist_undo like pt_filelist.
*    lt_filelist_undo[] = pt_filelist[].
    refresh pt_filelist.

    data lf_filter(255) type c.
    data lf_dir(255) type c.

    if pf_mask is initial.
      lf_filter = filter.
    else.
      lf_filter = pf_mask.
    endif.
    lf_dir = full_name.


    data lf_server type string.
    data lf_strlen type i.
    lf_strlen = strlen( full_name ).
    if lf_strlen &gt;= 2.

      if full_name(2) = co_serverindicator.

        lf_server = full_name+2.

        full_name = separator.

      endif.
    endif.

    if full_name = co_rootdir.
      call method read_server
        IMPORTING
          pt_filelist = pt_filelist.
      exit.
    endif.

    if full_name = co_AL11dir.
      call method read_al11
        IMPORTING
          pt_filelist = pt_filelist.
      exit.
    endif.

    if full_name = &apos;\&apos;.
      call method read_drives
        IMPORTING
          pt_filelist = pt_filelist.
      exit.
    endif.

    if full_name+1 = &apos;:\&apos; and &apos;*&apos; ca lf_filter.

      create object lf_ref_file type ZAPCMD_CL_SERVER_DIR.
      call method lf_ref_file-&gt;init
        EXPORTING
          pf_name      = &apos;..&apos;
          pf_full_name = &apos;\&apos;
          pf_size      = 0
          pf_dir       = full_name.
      append lf_ref_file to pt_filelist.


    endif.




**data lf_data(255) type c.
*data lf_data type string.
*data lt_data like table of lf_data.
*data mess(255) type c.
*
*open dataset lf_dir IN TEXT MODE MESSAGE mess.
*write: / mess.
*do.
*  read dataset lf_dir into  lf_data.
*  if sy-subrc &lt;&gt; 0.
*    exit.
*  endif.
*  append lf_data to lt_data.
*enddo.
*
*close dataset lf_dir.
    DATA: g_rec_level_120 TYPE i VALUE 0.

    DATA: BEGIN OF g_file,
         dirname(255) TYPE c, &quot; name of directory. (possibly truncated.)
            name(255)    TYPE c, &quot; name of entry. (possibly truncated.)
            type(10)     TYPE c,           &quot; type of entry.
            len(8)       TYPE p,           &quot; length in bytes.
            owner(8)     TYPE c,           &quot; owner of the entry.
        mtime(6)     TYPE p, &quot; last modification date,seconds since 1970
            mode(9)      TYPE c, &quot; like &quot;rwx-r-x--x&quot;: protection mode.
            usable(1)    TYPE c,
            subrc(4)     TYPE c,
            errno(3)     TYPE c,
            errmsg(40)   TYPE c,
            mod_date     TYPE d,
            mod_time(8)  TYPE c,           &quot; hh:mm:ss
            seen(1)      TYPE c,
            changed(1)   TYPE c,
            rec_level    TYPE i,
            dir_flag     TYPE xflag,
          END OF g_file.

    DATA: gt_file_list LIKE STANDARD TABLE OF g_file.

    CONSTANTS: c_true(1)     TYPE c VALUE &apos;X&apos;,
               c_false(1)    TYPE c VALUE &apos; &apos;.



    DATA: l_errcnt(2) TYPE p VALUE 0.

    g_file-rec_level = g_rec_level_120.

    CALL &apos;C_DIR_READ_FINISH&apos;             &quot; just to be sure
        ID &apos;ERRNO&apos;  FIELD g_file-errno
        ID &apos;ERRMSG&apos; FIELD g_file-errmsg.

    CALL &apos;C_DIR_READ_START&apos; ID &apos;DIR&apos;    FIELD lf_dir
                            ID &apos;FILE&apos;   FIELD lf_filter
                            ID &apos;ERRNO&apos;  FIELD g_file-errno
                            ID &apos;ERRMSG&apos; FIELD g_file-errmsg.
    IF sy-subrc &lt;&gt; 0.
      MESSAGE i204(s_dx_bapi) WITH g_file-errmsg g_file-errmsg.
      exit.
    ENDIF.

    DO.
      CLEAR g_file.
      g_file-rec_level = g_rec_level_120.
      CALL &apos;C_DIR_READ_NEXT&apos;
        ID &apos;TYPE&apos;   FIELD g_file-type
        ID &apos;NAME&apos;   FIELD g_file-name
        ID &apos;LEN&apos;    FIELD g_file-len
        ID &apos;OWNER&apos;  FIELD g_file-owner
        ID &apos;MTIME&apos;  FIELD g_file-mtime
        ID &apos;MODE&apos;   FIELD g_file-mode
        ID &apos;ERRNO&apos;  FIELD g_file-errno
        ID &apos;ERRMSG&apos; FIELD g_file-errmsg.
      g_file-dirname = lf_dir.
      MOVE sy-subrc TO g_file-subrc.

      CASE sy-subrc.
        WHEN 0.
          CLEAR: g_file-errno, g_file-errmsg.
          CASE g_file-type(1).
            WHEN &apos;F&apos;.                    &quot; normal file.
              MOVE c_true  TO g_file-usable.
            WHEN &apos;f&apos;.                    &quot; normal file.
              MOVE c_true  TO g_file-usable.
            WHEN OTHERS. &quot; directory, device, fifo, socket,...
              MOVE c_false TO g_file-usable.
          ENDCASE.
          IF ( g_file-type(1) = &apos;D&apos; ) OR
             ( g_file-type(1) = &apos;d&apos; ).
            g_file-dir_flag = c_true.
          ELSE.
            g_file-dir_flag = c_false.
          ENDIF.
          IF g_file-len = 0.
            MOVE c_false TO g_file-usable.
          ENDIF.
        WHEN 1.
          EXIT.
        WHEN OTHERS.                     &quot; SY-SUBRC &gt;= 2
          ADD 1 TO l_errcnt.
          IF l_errcnt &gt; 20.
*            message E002 with full_name raising permission_denied.
          ENDIF.
          IF sy-subrc = 5.
            IF ( g_file-name = &apos;..&apos; ) OR
             ( g_file-name = &apos;.&apos; ).
              g_file-dir_flag = c_true.
            ELSE.
              g_file-dir_flag = c_false.
            ENDIF.

            MOVE: &apos;???&apos; TO g_file-type,
                  &apos;???&apos; TO g_file-owner,
                  &apos;???&apos; TO g_file-mode.
          ELSE.
*         ULINE.
*         WRITE: / &apos;C_DIR_READ_NEXT&apos;, &apos;SUBRC&apos;, SY-SUBRC.
          ENDIF.
          MOVE c_false TO g_file-usable.
      ENDCASE.
      if g_file-errno &gt; 0.
        MOVE: &apos;???&apos; TO g_file-type,
              &apos;???&apos; TO g_file-owner,
              &apos;???&apos; TO g_file-mode.
        ADD 1 TO l_errcnt.
        IF l_errcnt &gt; 20.
*          message E002 with full_name raising permission_denied.
        ENDIF.
        MOVE c_false TO g_file-usable.
      endif.
      PERFORM p6_to_date_time_tz in program rstr0400 USING g_file-mtime
                                                 g_file-mod_time
                                                 g_file-mod_date.
*    MOVE-CORRESPONDING g_file TO gt_file_list.
      APPEND g_file to gt_file_list.
      case g_file-dir_flag.
        when &apos;X&apos;.
          create object lf_ref_file type ZAPCMD_CL_SERVER_DIR.
        when others.
          create object lf_ref_file type ZAPCMD_CL_SERVER_FILE.
      endcase.
      data lf_name type string.
      lf_name = g_file-name.
      data lf_time type tims.
      concatenate g_file-mod_time(2) g_file-mod_time+3(2)
        g_file-mod_time+6(2) into lf_time.
      data lf_attr type char10.
      lf_attr = g_file-mode.
      if lf_name &lt;&gt; space and lf_name &lt;&gt; &apos;.&apos;.
        call method lf_ref_file-&gt;init
          EXPORTING
            pf_name    = lf_name
            pf_size    = g_file-len
            pf_dir     = full_name
            pf_modtime = lf_time
            pf_moddate = g_file-mod_date
            pf_attr    = lf_attr.
        append lf_ref_file to pt_filelist.
      endif.
    ENDDO.

    CALL &apos;C_DIR_READ_FINISH&apos;
        ID &apos;ERRNO&apos;  FIELD g_file-errno
        ID &apos;ERRMSG&apos; FIELD g_file-errmsg.
    IF sy-subrc &lt;&gt; 0.
      WRITE: / &apos;C_DIR_READ_FINISH&apos;, &apos;SUBRC&apos;, sy-subrc.
    ENDIF.

*  READ TABLE GT_FILE_LIST WITH KEY REC_LEVEL = G_REC_LEVEL_120
*                                   NAME      = &apos;..&apos;.
*  IF SY-SUBRC NE 0.
*     CLEAR GT_FILE_LIST.
*     GT_FILE_LIST-REC_LEVEL = G_REC_LEVEL_120.
*     GT_FILE_LIST-DIRNAME   = P_PATH.
*     GT_FILE_LIST-USABLE    = c_true.
*     GT_FILE_LIST-DIR_FLAG  = c_true.
*     GT_FILE_LIST-NAME      = &apos;..&apos;.
*     append GT_FILE_LIST.
*  ENDIF.

*  SORT gt_file_list STABLE BY rec_level ASCENDING
*                              name      ASCENDING
*                              mtime     DESCENDING.

    sort pt_filelist by table_line-&gt;is_dir descending table_line-&gt;name.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="READ_DRIVES" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="READ_DRIVES" SCONAME="PT_FILELIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <source>method READ_DRIVES.

* ...
    data lf_drives(26) type c value &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;.
    data lf_index type i value 0.
    data lf_drive type string.
    data lf_name type string.
    data lf_drivetype type string.

    data lf_ref_file type ref to Zapcmd_CL_KNOT.

    do 26 times.
      lf_drive = lf_drives+lf_index(1).
      concatenate lf_drive &apos;:&apos; separator into lf_drive.

      data lf_temp(255) type c.
      lf_temp = lf_drive.

*      try.
*      open dataset lf_drive for input in binary mode.
*      IF SY-SUBRC = 0.
*        close dataset lf_drive.

        concatenate lf_drive space into lf_name.
        create object lf_ref_file type Zapcmd_CL_SERVER_DIR.
        call method lf_ref_file-&gt;init
          EXPORTING
            pf_full_name = lf_drive
            pf_name      = lf_name
            pf_size      = 0
            pf_dir       = full_name.

        append lf_ref_file to pt_filelist.


*      ENDIF.
*      catch cx_root.
*      endtry.



      lf_index = lf_index + 1.
    enddo.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="READ_SERVER" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_SERVER_DIR" CMPNAME="READ_SERVER" SCONAME="PT_FILELIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <source>method READ_SERVER.

    data lt_server type table of MSXXLIST.
    data ls_server type MSXXLIST.

    CALL FUNCTION &apos;TH_SERVER_LIST&apos;
         TABLES
              LIST          = lt_server
         EXCEPTIONS
              NO_SERVER_LIST.
    IF SY-SUBRC &lt;&gt; 0.
      exit.
    ENDIF.

    loop at lt_server into ls_server.

      data lf_name type string.
      data lf_server type string.
      data lf_ref_file type ref to ZAPCMD_CL_KNOT.

      lf_name = ls_server-name.
      concatenate co_serverindicator ls_server-name into lf_server.
      create object lf_ref_file type ZAPCMD_CL_SERVER_DIR.
      call method lf_ref_file-&gt;init
        EXPORTING
          pf_full_name = lf_server
          pf_name      = lf_name
          pf_size      = 0
          pf_dir       = full_name.

      append lf_ref_file to pt_filelist.

    endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="RENAME" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method RENAME.

data lf_oldlongname type zapcmd_fullname.

 lf_oldlongname = me-&gt;full_name.

CALL METHOD SUPER-&gt;RENAME
  EXPORTING
    PF_NEWNAME = PF_NEWNAME
    .

data lf_command type string.
data lf_parameter type string.
if separator = &apos;\&apos;.
  concatenate lf_oldlongname name into lf_parameter
    separated by space.
  lf_command = &apos;ren&apos;.
else.
  concatenate lf_oldlongname full_name into lf_parameter
    separated by space.
  lf_command = &apos;mv&apos;.
endif.
 call method exec_server
      exporting
        pf_command = lf_command
        pf_parameter = lf_parameter .
endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_KNOT" VERSION="1" LANGU="D" DESCRIPT="Knoten im Verzeichnisbaum" UUID="35D8302610C4714EAB4F6645C857AF12" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZAPCMD_CL_KNOT definition
  public
  abstract
  create public .

*&quot;* public components of class ZAPCMD_CL_KNOT
*&quot;* do not include other source files here!!!
public section.
  type-pools ICON .

  constants CO_AREA_APPLSERV type ZAPCMD_SERVER_AREA value &apos;A&apos;. &quot;#EC NOTEXT
  constants CO_AREA_FRONTEND type ZAPCMD_SERVER_AREA value &apos;P&apos;. &quot;#EC NOTEXT
  data NAME type STRING .
  data EXTENSION type STRING .
  data SHORTNAME type STRING .
  data FULL_NAME type STRING .
  data DIR type STRING .
  data FILESIZE type I .
  data SIZESTR type STRING .
  data MODDATE type DATS .
  data MODTIME type TIMS .
  data FILETYPE type CHAR10 .
  data ATTR type CHAR10 .
  data IS_DIR type XFELD value SPACE .
  data SEPARATOR type CHAR10 value &apos;/&apos; .
  data SERVER_AREA type ZAPCMD_SERVER_AREA value &apos;A&apos; .
  constants CO_ROOTDIR type C value &apos;^&apos;. &quot;#EC NOTEXT
  constants:
    co_al11dir(6) type c value &apos;&lt;AL11&gt;&apos;. &quot;#EC NOTEXT
  constants:
    co_serverindicator(2) type c value &apos;$$&apos;. &quot;#EC NOTEXT

  class-methods CONVERT_SIZE
    importing
      !PF_SIZE type P
    exporting
      !PFX_SIZESTR type STRING .
  class-methods EXEC_SERVER
    importing
      !PF_COMMAND type CSEQUENCE default &apos;mkdir&apos;
      !PF_DIR type CSEQUENCE optional
      !PF_PARAMETER type CSEQUENCE optional
    exporting
      !PTX_OUTPUT type ZAPCMD_TBL_STRING .
  methods GET_INFO
    returning
      value(PSX_FILEINFO) type ZAPCMD_FILE_DESCR .
  methods INIT
    importing
      !PF_NAME type CSEQUENCE optional
      !PF_FULL_NAME type CSEQUENCE optional
      !PF_SIZE type P optional
      !PF_MODDATE type DATS optional
      !PF_MODTIME type TIMS optional
      !PF_ATTR type CHAR10 optional
      !PF_DIR type CSEQUENCE optional .
  methods EXECUTE
  abstract .
  methods DELETE
  abstract .
  methods RENAME
    importing
      !PF_NEWNAME type ZAPCMD_FILENAME .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_KNOT
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_KNOT
*&quot;* do not include other source files here!!!
private section.

  methods SPLIT_FULLNAME
    importing
      value(PF_FULLNAME) type CSEQUENCE
    exporting
      value(PFX_NAME) type CSEQUENCE
      value(PFX_SHORTNAME) type CSEQUENCE
      value(PFX_EXTENSION) type CSEQUENCE
      value(PFX_DIR) type CSEQUENCE .
  methods SPLIT_NAME
    importing
      value(PF_NAME) type CSEQUENCE
    exporting
      value(PFX_SHORTNAME) type CSEQUENCE
      value(PFX_EXTENSION) type CSEQUENCE .</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZAPCMD_CL_KNOT" TYPEGROUP="ICON" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ICON</forwardDeclaration>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="ATTR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="13 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR10" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CO_AL11DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="18 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071113" ATTDECLTYP="2" ATTVALUE="&apos;&lt;AL11&gt;&apos;" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="29 " SRCCOLUMN1="4 " SRCROW2="29 " SRCCOLUMN2="23 " TYPESRC_LENG="0 " TYPESRC="co_al11dir(6) type c
"/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CO_AREA_APPLSERV" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" ATTDECLTYP="2" ATTVALUE="&apos;A&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZAPCMD_SERVER_AREA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CO_AREA_FRONTEND" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" ATTDECLTYP="2" ATTVALUE="&apos;P&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZAPCMD_SERVER_AREA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CO_ROOTDIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="17 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="2" ATTVALUE="&apos;^&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="C" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CO_SERVERINDICATOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="19 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071113" ATTDECLTYP="2" ATTVALUE="&apos;$$&apos;" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="31 " SRCCOLUMN1="4 " SRCROW2="31 " SRCCOLUMN2="31 " TYPESRC_LENG="0 " TYPESRC="co_serverindicator(2) type c
"/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXTENSION" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="FILESIZE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="FILETYPE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR10" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="FULL_NAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="IS_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="14 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTVALUE="SPACE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="XFELD" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="MODDATE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DATS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="MODTIME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TIMS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="NAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SEPARATOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="15 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTVALUE="&apos;/&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR10" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SERVER_AREA" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="16 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTVALUE="&apos;A&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZAPCMD_SERVER_AREA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SHORTNAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SIZESTR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071025" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CONVERT_SIZE" VERSION="1" LANGU="D" DESCRIPT="Schreibt die Dateilänge in eine Zeichenkette" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CONVERT_SIZE" SCONAME="PF_SIZE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="P"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="CONVERT_SIZE" SCONAME="PFX_SIZESTR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method CONVERT_SIZE.

*data lf_temp(15) type c.
*write pf_size to lf_temp.
*pfx_sizestr = lf_temp.

    DATA lf_size TYPE p DECIMALS 2.
    DATA lf_kmg(4) TYPE c.

    lf_size = pf_size.
    IF lf_size &gt; 0.
      lf_kmg = &apos;B&apos;.
    ENDIF.
    IF lf_size &gt; 1000.
      lf_size = lf_size / 1000.
      lf_kmg = &apos;kB&apos;.
    ENDIF.
    IF lf_size &gt; 1000.
      lf_size = lf_size / 1000.
      lf_kmg = &apos;MB&apos;.
    ENDIF.
    IF lf_size &gt; 1000.
      lf_size = lf_size / 1000.
      lf_kmg = &apos;GB&apos;.
    ENDIF.
    DATA lf_temp(7) TYPE c.
    WRITE lf_size TO lf_temp.
    CONCATENATE lf_temp lf_kmg INTO pfx_sizestr SEPARATED BY space.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="DELETE" VERSION="1" LANGU="D" DESCRIPT="Löschen der Datei oder Verzeichnis" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0"/>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXECUTE" VERSION="1" LANGU="D" DESCRIPT="Anzeigen oder Ausführen der Datei" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0"/>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXEC_SERVER" VERSION="1" LANGU="D" DESCRIPT="Führt einen Befehl auf dem Applikationsserver aus." EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXEC_SERVER" SCONAME="PF_COMMAND" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PARVALUE="&apos;mkdir&apos;" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXEC_SERVER" SCONAME="PF_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXEC_SERVER" SCONAME="PF_PARAMETER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="EXEC_SERVER" SCONAME="PTX_OUTPUT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_STRING"/>
   <source>METHOD exec_server.

  DATA: lf_command(255) TYPE c.
  DATA: l_lines TYPE TABLE OF char255.
  FIELD-SYMBOLS: &lt;l_line&gt; TYPE char255.
  CONCATENATE pf_command pf_parameter
    INTO lf_command SEPARATED BY space.
  DATA: lf_dir(255) TYPE c.
  lf_dir = pf_dir.

  IF lf_dir IS NOT INITIAL.
    CALL &apos;SYSTEM&apos; ID &apos;COMMAND&apos; FIELD lf_command
      ID &apos;PATH&apos; FIELD lf_dir
      ID &apos;TAB&apos; FIELD l_lines.
  ELSE.
    CALL &apos;SYSTEM&apos; ID &apos;COMMAND&apos; FIELD lf_command
      ID &apos;TAB&apos; FIELD l_lines.
  ENDIF.

* Check any files exits in the directory.......................
  IF sy-subrc &lt;&gt; 0.
    APPEND &apos;Datei nicht gefunden.&apos;(130) TO ptx_output.
    RETURN.
  ENDIF.

  DATA lf_conv1 TYPE REF TO cl_abap_conv_out_ce.
  DATA lf_conv2 TYPE REF TO cl_abap_conv_in_ce.
  DATA lf_buffer TYPE xstring.
*  data lf_codepage type CPCODEPAGE.
*
*  CALL FUNCTION &apos;SCP_CODEPAGE_BY_EXTERNAL_NAME&apos;
*    EXPORTING
*      external_name       = &apos;CP437&apos;
**     KIND                = &apos;H&apos;
*   IMPORTING
*     SAP_CODEPAGE        = lf_codepage
**   EXCEPTIONS
**     NOT_FOUND           = 1
**     OTHERS              = 2
*            .
*  IF sy-subrc &lt;&gt; 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.



   lf_conv1 = cl_abap_conv_out_ce=&gt;create(
           encoding = &apos;NON-UNICODE&apos;
           endian = &apos;L&apos;
         ).
  lf_conv2 = cl_abap_conv_in_ce=&gt;create(
           encoding = &apos;1103&apos;
           endian = &apos;L&apos;
         ).

  LOOP AT l_lines ASSIGNING &lt;l_line&gt;.

    lf_conv1-&gt;convert(
        EXPORTING data = &lt;l_line&gt;
        IMPORTING buffer = lf_buffer ).

    lf_conv2-&gt;convert(
       EXPORTING input = lf_buffer
       IMPORTING data = &lt;l_line&gt; ).


  ENDLOOP.
  ptx_output[] = l_lines[].
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="GET_INFO" VERSION="1" LANGU="D" DESCRIPT="Liefert eine Informationsstruktur über die Datei" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="GET_INFO" SCONAME="PSX_FILEINFO" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_FILE_DESCR"/>
   <source>method GET_INFO.

* ...
    IF filetype = &apos;DIR&apos;.
      CONCATENATE &apos;[&apos; shortname &apos;]&apos; INTO psx_fileinfo-shortname.
      if shortname = &apos;..&apos;.
        psx_fileinfo-icon = icon_collapse_all.
      else.
        psx_fileinfo-icon = icon_folder.
      endif.
    ELSE.
      psx_fileinfo-shortname = shortname.
      data l_extension like extension.
      if strlen( extension ) &gt;= 3.
      l_extension = extension.
      TRANSLATE l_extension to upper case.
      case l_extension(3).
        when &apos;EXE&apos;. psx_fileinfo-icon = ICON_EXECUTE_OBJECT.
        when &apos;TXT&apos;. psx_fileinfo-icon = ICON_CHANGE_TEXT.
        when &apos;XML&apos; or &apos;XSD&apos;. psx_fileinfo-icon = ICON_XML_DOC.
        when &apos;OTF&apos;. psx_fileinfo-icon = ICON_OTF_DOCUMENT.
        when &apos;ZIP&apos; or &apos;RAR&apos;. psx_fileinfo-icon = ICON_PACKAGE_STANDARD.
        when &apos;WAV&apos; or &apos;MP3&apos;. psx_fileinfo-icon = ICON_VOICE_OUTPUT.
        when &apos;AVI&apos; or &apos;DIV&apos; or &apos;MPG&apos; or &apos;MPE&apos;.
          psx_fileinfo-icon = ICON_VIDEO.
        when &apos;BMP&apos;. psx_fileinfo-icon = ICON_BMP.
        when &apos;DOC&apos;. psx_fileinfo-icon = ICON_DOC.
        when &apos;DOT&apos;. psx_fileinfo-icon = ICON_DOT.
        when &apos;EFF&apos;. psx_fileinfo-icon = ICON_EFF.
        when &apos;EML&apos;. psx_fileinfo-icon = ICON_EML.
        when &apos;GIF&apos;. psx_fileinfo-icon = ICON_GIF.
        when &apos;HLP&apos;. psx_fileinfo-icon = ICON_HLP.
        when &apos;HTM&apos;. psx_fileinfo-icon = ICON_HTM.
        when &apos;HTT&apos;. psx_fileinfo-icon = ICON_HTT.
        when &apos;ITS&apos;. psx_fileinfo-icon = ICON_ITS.
        when &apos;JPG&apos; or &apos;JPE&apos;. psx_fileinfo-icon = ICON_JPG.
        when &apos;LWP&apos;. psx_fileinfo-icon = ICON_LWP.
        when &apos;MSG&apos;. psx_fileinfo-icon = ICON_MSG.
        when &apos;PDF&apos;. psx_fileinfo-icon = ICON_PDF.
        when &apos;PPT&apos;. psx_fileinfo-icon = ICON_PPT.
        when &apos;RTF&apos;. psx_fileinfo-icon = ICON_RTF.
        when &apos;SAP&apos;. psx_fileinfo-icon = ICON_SAP.
        when &apos;TBH&apos;. psx_fileinfo-icon = ICON_TBH.
        when &apos;TIF&apos;. psx_fileinfo-icon = ICON_TIF.
        when &apos;VSD&apos;. psx_fileinfo-icon = ICON_VSD.
        when &apos;WRI&apos;. psx_fileinfo-icon = ICON_WRI.
        when &apos;XLS&apos;. psx_fileinfo-icon = ICON_XLS.
        when &apos;XLV&apos;. psx_fileinfo-icon = ICON_XLV.
        when &apos;URL&apos;. psx_fileinfo-icon = ICON_URL.
        when others.
          psx_fileinfo-icon = icon_create.
      endcase.
      else.
        if extension is initial.
          clear psx_fileinfo-icon.
        else.
          psx_fileinfo-icon = icon_create.
        endif.
      endif.
    ENDIF.
    psx_fileinfo-name = name.

    psx_fileinfo-extension = extension.
    psx_fileinfo-full_name = full_name.
    psx_fileinfo-filesize = filesize.
    psx_fileinfo-sizestr = sizestr.
    psx_fileinfo-moddate = moddate.
    psx_fileinfo-modtime = modtime.
    psx_fileinfo-filetype = filetype.
    psx_fileinfo-attr = attr.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_NAME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_FULL_NAME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_SIZE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="P" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_MODDATE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DATS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_MODTIME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TIMS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_ATTR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR10" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" SCONAME="PF_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PAROPTIONL="X"/>
   <source>method INIT.

* ...
    name = pf_name.
    full_name = pf_full_name.
    dir = pf_dir.
    filesize = pf_size.
    modtime = pf_modtime.
    moddate = pf_moddate.
    attr = pf_attr.

    CALL METHOD convert_size
      EXPORTING
        pf_size     = pf_size
      IMPORTING
        pfx_sizestr = sizestr.

    IF pf_full_name IS INITIAL AND NOT pf_dir IS INITIAL.
      DATA lf_slen TYPE i.
      lf_slen = STRLEN( pf_dir ) - STRLEN( separator ).
      IF pf_dir+lf_slen = separator.
        CONCATENATE pf_dir pf_name INTO full_name.
      ELSE.
        CONCATENATE pf_dir separator pf_name INTO full_name.
      ENDIF.
    ENDIF.
    if name is initial.
      call method split_fullname
        exporting
          pf_fullname = full_name
        importing
          pfx_name = name
          pfx_shortname = shortname
          pfx_extension = extension
          pfx_dir = dir.

    else.
        call method split_name
        exporting
          pf_name = name
        importing
          pfx_shortname = shortname
          pfx_extension = extension.
    endif.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="RENAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071021" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="RENAME" SCONAME="PF_NEWNAME" VERSION="1" LANGU="D" DESCRIPT="Dateiname ohne Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071021" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_FILENAME"/>
   <source>method RENAME.



  name = pf_newname.
  concatenate dir separator name into full_name.
  me-&gt;split_name(
    EXPORTING
      pf_name       = name
    IMPORTING
      PFX_SHORTNAME = SHORTNAME
      PFX_EXTENSION = EXTENSION
         ).




endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_FULLNAME" VERSION="1" LANGU="D" DESCRIPT="Unterteilt einen Dateinamen in Pfad, Name und Extension" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_FULLNAME" SCONAME="PF_FULLNAME" VERSION="1" LANGU="D" DESCRIPT="Dateiname mit Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_FULLNAME" SCONAME="PFX_NAME" VERSION="1" LANGU="D" DESCRIPT="Dateiname ohne Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_FULLNAME" SCONAME="PFX_SHORTNAME" VERSION="1" LANGU="D" DESCRIPT="Dateiname ohne Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_FULLNAME" SCONAME="PFX_EXTENSION" VERSION="1" LANGU="D" DESCRIPT="Dateinamenerweiterung" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_FULLNAME" SCONAME="PFX_DIR" VERSION="1" LANGU="D" DESCRIPT="Verzeichnisname mit Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <source>method SPLIT_FULLNAME.

*  data separator type c value &apos;\&apos;.
  data lf_dirs type string.
  data lt_dirs like table of lf_dirs.
  split pf_fullname at separator into table lt_dirs.
  loop at lt_dirs into lf_dirs.
    if sy-tabix &lt; lines( lt_dirs ).
      if pfx_dir is initial.
        pfx_dir = lf_dirs.
      else.
        concatenate pfx_dir separator lf_dirs into pfx_dir.
      endif.
    else.
      pfx_name = lf_dirs.
    endif.
  endloop.
  data l_count type i.
  l_count = strlen( pfx_dir ).
  l_count = l_count - 1.
  if l_count &gt; 0 and pfx_dir+l_count = &apos;:&apos;.
    concatenate pfx_dir separator into pfx_dir.
  endif.

  me-&gt;split_name(
    EXPORTING
      pf_name       = pfx_name
    IMPORTING
      PFX_SHORTNAME = PFX_SHORTNAME
      PFX_EXTENSION = PFX_EXTENSION
         ).


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_NAME" VERSION="1" LANGU="D" DESCRIPT="Unterteilt einen Namen in Kurzname und Extension" EXPOSURE="0" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_NAME" SCONAME="PF_NAME" VERSION="1" LANGU="D" DESCRIPT="Dateiname ohne Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_NAME" SCONAME="PFX_SHORTNAME" VERSION="1" LANGU="D" DESCRIPT="Dateiname ohne Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="SPLIT_NAME" SCONAME="PFX_EXTENSION" VERSION="1" LANGU="D" DESCRIPT="Dateinamenerweiterung" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071025" CHANGEDBY="BCUSER" CHANGEDON="20071025" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <source>method SPLIT_NAME.
  if pf_name is initial or pf_name = &apos;..&apos; or pf_name = &apos;.&apos;.
    pfx_shortname = pf_name.
    pfx_extension = space.
    return.
  endif.
  data lf_names type string.
  data lt_names like table of lf_names.
  split pf_name at &apos;.&apos; into table lt_names.
  loop at lt_names into lf_names.
    if sy-tabix &lt; lines( lt_names ).
      if pfx_shortname is initial.
        pfx_shortname = lf_names.
      else.
        concatenate pfx_shortname &apos;.&apos; lf_names into pfx_shortname.
      endif.
    else.
      pfx_extension = lf_names.
    endif.
  endloop.
  if pfx_shortname is initial.
    pfx_shortname = pfx_extension.
    clear pfx_extension.
  endif.
  if pf_name(1) = &apos;.&apos;.
    concatenate &apos;.&apos; pfx_shortname into pfx_shortname.
  endif.
  if pfx_extension co &apos;1234567890&apos;.
    pfx_shortname = pf_name.
    clear pfx_extension.
  endif.
  if pfx_extension ca &apos;-)]&apos;.
    pfx_shortname = pf_name.
    clear pfx_extension.
  endif.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_FRONTEND_FILE" VERSION="1" LANGU="D" DESCRIPT="Datei auf dem Frontend" UUID="2A0E5C63F5AA544F91180C4110ED0D1D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="20071021" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZAPCMD_CL_FILE" CHANGEDBY="BCUSER">
  <publicSection>class ZAPCMD_CL_FRONTEND_FILE definition
  public
  inheriting from ZAPCMD_CL_FILE
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_FRONTEND_FILE
*&quot;* do not include other source files here!!!
public section.

  methods CONSTRUCTOR .

  methods DELETE
    redefinition .
  methods EXECUTE
    redefinition .
  methods INIT
    redefinition .
  methods READ_BIN
    redefinition .
  methods READ_TEXT
    redefinition .
  methods WRITE_BIN
    redefinition .
  methods WRITE_TEXT
    redefinition .
  methods RENAME
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_FRONTEND_FILE
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_FRONTEND_FILE
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" STATE="1" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071021">
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="DELETE"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="EXECUTE"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="INIT"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="READ_BIN"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="READ_TEXT"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="RENAME"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="WRITE_BIN"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_FILE" REFCLSNAME="ZAPCMD_CL_FILE" VERSION="1" MTDNAME="WRITE_TEXT"/>
  </inheritance>
  <method CLSNAME="ZAPCMD_CL_FRONTEND_FILE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.

* ...
    call method super-&gt;constructor.
    separator = &apos;\&apos;.
    server_area = &apos;P&apos;.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="DELETE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DELETE.

    data lf_rc type sysubrc.

     CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;FILE_DELETE
       EXPORTING
         FILENAME             = me-&gt;full_name
       CHANGING
         RC                   = lf_rc
       EXCEPTIONS
         FILE_DELETE_FAILED   = 1
         CNTL_ERROR           = 2
         ERROR_NO_GUI         = 3
         FILE_NOT_FOUND       = 4
         ACCESS_DENIED        = 5
         UNKNOWN_ERROR        = 6
*        NOT_SUPPORTED_BY_GUI = 7
*        WRONG_PARAMETER      = 8
         others               = 9
             .
     IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
     ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="EXECUTE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTE.

* ...

    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;EXECUTE
      EXPORTING
        DOCUMENT               = full_name
*    APPLICATION            =
*    PARAMETER              =
*    DEFAULT_DIRECTORY      =
*    MAXIMIZED              =
*    MINIMIZED              =
*    SYNCHRONOUS            =
      EXCEPTIONS
        CNTL_ERROR             = 1
        ERROR_NO_GUI           = 2
        BAD_PARAMETER          = 3
        FILE_NOT_FOUND         = 4
        PATH_NOT_FOUND         = 5
        FILE_EXTENSION_UNKNOWN = 6
        ERROR_EXECUTE_FAILED   = 7
        others                 = 8
            .
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE &apos;I&apos; NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="INIT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method INIT.
  call method super-&gt;init
      EXPORTING
        pf_name      = pf_name
        pf_full_name = pf_full_name
        pf_size      = pf_size
        pf_moddate   = pf_moddate
        pf_modtime   = pf_modtime
        pf_attr      = pf_attr
        pf_dir       = pf_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_BIN" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method READ_BIN.


    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;GUI_UPLOAD
      EXPORTING
        FILENAME                = full_name
        FILETYPE                = &apos;BIN&apos;
*    HAS_FIELD_SEPARATOR     = SPACE
*    HEADER_LENGTH           = 0
      IMPORTING
        FILELENGTH              = pf_filesize
*    HEADER                  =
      CHANGING
        DATA_TAB                = pt_file
      EXCEPTIONS
        FILE_OPEN_ERROR         = 1
        FILE_READ_ERROR         = 2
        NO_BATCH                = 3
        GUI_REFUSE_FILETRANSFER = 4
        INVALID_TYPE            = 5
        NO_AUTHORITY            = 6
        UNKNOWN_ERROR           = 7
        BAD_DATA_FORMAT         = 8
        HEADER_NOT_ALLOWED      = 9
        SEPARATOR_NOT_ALLOWED   = 10
        HEADER_TOO_LONG         = 11
        UNKNOWN_DP_ERROR        = 12
        ACCESS_DENIED           = 13
        DP_OUT_OF_MEMORY        = 14
        DISK_FULL               = 15
        DP_TIMEOUT              = 16
        others                  = 17
            .
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE &apos;I&apos; NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      exit.
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_TEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method READ_TEXT.

      CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;GUI_UPLOAD
      EXPORTING
        FILENAME                = full_name
        FILETYPE                = &apos;ASC&apos;
*    HAS_FIELD_SEPARATOR     = SPACE
*    HEADER_LENGTH           = 0
*  IMPORTING
*    FILELENGTH              =
*    HEADER                  =
      CHANGING
        DATA_TAB                = pt_file
      EXCEPTIONS
        FILE_OPEN_ERROR         = 1
        FILE_READ_ERROR         = 2
        NO_BATCH                = 3
        GUI_REFUSE_FILETRANSFER = 4
        INVALID_TYPE            = 5
        NO_AUTHORITY            = 6
        UNKNOWN_ERROR           = 7
        BAD_DATA_FORMAT         = 8
        HEADER_NOT_ALLOWED      = 9
        SEPARATOR_NOT_ALLOWED   = 10
        HEADER_TOO_LONG         = 11
        UNKNOWN_DP_ERROR        = 12
        ACCESS_DENIED           = 13
        DP_OUT_OF_MEMORY        = 14
        DISK_FULL               = 15
        DP_TIMEOUT              = 16
        others                  = 17
            .
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE &apos;I&apos; NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      exit.
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="RENAME" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method RENAME.
*CALL METHOD SUPER-&gt;RENAME
*  EXPORTING
*    PF_NEWNAME = PF_NEWNAME
*    .

message &apos;Not yet implemented&apos; type &apos;I&apos;.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_BIN" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WRITE_BIN.

    data lt_file type zapcmd_tbl_xstring.
    lt_file[] = pt_file[].

    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;GUI_DOWNLOAD
      EXPORTING
        BIN_FILESIZE            =  pf_filesize
        FILENAME                = full_name
        FILETYPE                = &apos;BIN&apos;
*    APPEND                  = SPACE
*    WRITE_FIELD_SEPARATOR   = SPACE
*    HEADER                  = &apos;00&apos;
*    TRUNC_TRAILING_BLANKS   = SPACE
*    WRITE_LF                = &apos;X&apos;
*    COL_SELECT              = SPACE
*    COL_SELECT_MASK         = SPACE
*  IMPORTING
*    FILELENGTH              =
      CHANGING
        DATA_TAB                = lt_file
      EXCEPTIONS
        FILE_WRITE_ERROR        = 1
        NO_BATCH                = 2
        GUI_REFUSE_FILETRANSFER = 3
        INVALID_TYPE            = 4
        NO_AUTHORITY            = 5
        UNKNOWN_ERROR           = 6
        HEADER_NOT_ALLOWED      = 7
        SEPARATOR_NOT_ALLOWED   = 8
        FILESIZE_NOT_ALLOWED    = 9
        HEADER_TOO_LONG         = 10
        DP_ERROR_CREATE         = 11
        DP_ERROR_SEND           = 12
        DP_ERROR_WRITE          = 13
        UNKNOWN_DP_ERROR        = 14
        ACCESS_DENIED           = 15
        DP_OUT_OF_MEMORY        = 16
        DISK_FULL               = 17
        DP_TIMEOUT              = 18
        FILE_NOT_FOUND          = 19
        DATAPROVIDER_EXCEPTION  = 20
        CONTROL_FLUSH_ERROR     = 21
        others                  = 22
            .
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE &apos;I&apos; NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      exit.
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_TEXT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method WRITE_TEXT.

     data lt_file type zapcmd_tbl_string.
    lt_file[] = pt_file[].

    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;GUI_DOWNLOAD
      EXPORTING
*    BIN_FILESIZE            =
        FILENAME                = full_name
        FILETYPE                = &apos;ASC&apos;
*    APPEND                  = SPACE
*    WRITE_FIELD_SEPARATOR   = SPACE
*    HEADER                  = &apos;00&apos;
*    TRUNC_TRAILING_BLANKS   = SPACE
*    WRITE_LF                = &apos;X&apos;
*    COL_SELECT              = SPACE
*    COL_SELECT_MASK         = SPACE
*  IMPORTING
*    FILELENGTH              =
      CHANGING
        DATA_TAB                = lt_file
      EXCEPTIONS
        FILE_WRITE_ERROR        = 1
        NO_BATCH                = 2
        GUI_REFUSE_FILETRANSFER = 3
        INVALID_TYPE            = 4
        NO_AUTHORITY            = 5
        UNKNOWN_ERROR           = 6
        HEADER_NOT_ALLOWED      = 7
        SEPARATOR_NOT_ALLOWED   = 8
        FILESIZE_NOT_ALLOWED    = 9
        HEADER_TOO_LONG         = 10
        DP_ERROR_CREATE         = 11
        DP_ERROR_SEND           = 12
        DP_ERROR_WRITE          = 13
        UNKNOWN_DP_ERROR        = 14
        ACCESS_DENIED           = 15
        DP_OUT_OF_MEMORY        = 16
        DISK_FULL               = 17
        DP_TIMEOUT              = 18
        FILE_NOT_FOUND          = 19
        DATAPROVIDER_EXCEPTION  = 20
        CONTROL_FLUSH_ERROR     = 21
        others                  = 22
            .
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE &apos;I&apos; NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      exit.
    ENDIF.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_FRONTEND_DIR" VERSION="1" LANGU="D" DESCRIPT="Verzeichnis auf dem Frontend" UUID="61B034566AAC1448B13BBE91BADA393B" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="20071009" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZAPCMD_CL_DIR" CHANGEDBY="BCUSER">
  <publicSection>class ZAPCMD_CL_FRONTEND_DIR definition
  public
  inheriting from ZAPCMD_CL_DIR
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_FRONTEND_DIR
*&quot;* do not include other source files here!!!
public section.
  type-pools ICON .

  methods CONSTRUCTOR .

  methods CREATE_DIR
    redefinition .
  methods CREATE_FILE
    redefinition .
  methods DELETE
    redefinition .
  methods EXECUTE
    redefinition .
  methods GET_FREESPACE
    redefinition .
  methods GET_TOOLBAR
    redefinition .
  methods INIT
    redefinition .
  methods READ_DIR
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_FRONTEND_DIR
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_FRONTEND_DIR
*&quot;* do not include other source files here!!!
private section.

   methods READ_DRIVES
      exporting
        value(PT_FILELIST) type ZAPCMD_TBL_FILELIST .</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZAPCMD_CL_FRONTEND_DIR" TYPEGROUP="ICON" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ICON</forwardDeclaration>
  <inheritance CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" STATE="1" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071009">
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="CREATE_DIR"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="CREATE_FILE"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="DELETE"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="EXECUTE"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="GET_FREESPACE"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="GET_TOOLBAR"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="INIT"/>
   <redefinition CLSNAME="ZAPCMD_CL_FRONTEND_DIR" REFCLSNAME="ZAPCMD_CL_DIR" VERSION="1" MTDNAME="READ_DIR"/>
  </inheritance>
  <method CLSNAME="ZAPCMD_CL_FRONTEND_DIR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.
* ...
    call method super-&gt;constructor.
    separator = &apos;\&apos;.
    server_area = &apos;P&apos;.
endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_DIR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CREATE_DIR.

     create object pf_file type ZAPCMD_CL_FRONTEND_DIR.

    call method pf_file-&gt;init
      EXPORTING
        pf_name    = pf_filename
        pf_size    = 0
        pf_dir     = full_name
        pf_moddate = sy-datum
        pf_modtime = sy-uzeit
        pf_attr    = space.

    data lf_rc type sysubrc.

    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;DIRECTORY_CREATE
      EXPORTING
        DIRECTORY                = pf_file-&gt;full_name
      CHANGING
        RC                       = lf_rc
      EXCEPTIONS
        DIRECTORY_CREATE_FAILED  = 1
        CNTL_ERROR               = 2
        ERROR_NO_GUI             = 3
        DIRECTORY_ACCESS_DENIED  = 4
        DIRECTORY_ALREADY_EXISTS = 5
        PATH_NOT_FOUND           = 6
        UNKNOWN_ERROR            = 7
*           NOT_SUPPORTED_BY_GUI     = 8
*           WRONG_PARAMETER          = 9
        others                   = 10
            .
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_FILE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD create_file.

  CREATE OBJECT pf_file TYPE zapcmd_cl_frontend_file.

  CALL METHOD pf_file-&gt;init
    EXPORTING
      pf_name    = pf_filename
      pf_size    = 0
      pf_dir     = full_name
      pf_moddate = sy-datum
      pf_modtime = sy-uzeit
      pf_attr    = space.


ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="DELETE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DELETE.

     data lf_rc type sysubrc.

    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;DIRECTORY_DELETE
      EXPORTING
        DIRECTORY               = full_name
      CHANGING
        RC                      = lf_rc
      EXCEPTIONS
        DIRECTORY_DELETE_FAILED = 1
        CNTL_ERROR              = 2
        ERROR_NO_GUI            = 3
        PATH_NOT_FOUND          = 4
        DIRECTORY_ACCESS_DENIED = 5
        UNKNOWN_ERROR           = 6
*       NOT_SUPPORTED_BY_GUI    = 7
*       WRONG_PARAMETER         = 8
        others                  = 9.
    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="EXECUTE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTE.



endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_FREESPACE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method GET_FREESPACE.

    data lf_space type i.
    data len type i.
    len = strlen( full_name ).

    if len &gt;= 2.
      data lf_drive type string.
      lf_drive = full_name(2).

      CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;GET_FREE_SPACE_FOR_DRIVE
        EXPORTING
          DRIVE                 = lf_drive
        CHANGING
          FREE_SPACE            = lf_space
        EXCEPTIONS
          CNTL_ERROR            = 1
          GET_FREE_SPACE_FAILED = 2
          ERROR_NO_GUI          = 3
          WRONG_PARAMETER       = 4
          NOT_SUPPORTED_BY_GUI  = 5
          others                = 6.
      IF SY-SUBRC &lt;&gt; 0.
        exit.
      ENDIF.
      CALL METHOD CL_GUI_CFW=&gt;FLUSH
        EXCEPTIONS
          CNTL_SYSTEM_ERROR = 1
          CNTL_ERROR        = 2
          others            = 3.

      IF SY-SUBRC &lt;&gt; 0.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

      pf_space = lf_space.
    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_TOOLBAR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method GET_TOOLBAR.

    data ls_toolbar type STB_BUTTON.

     CLEAR ls_toolbar.
    MOVE 0 TO ls_toolbar-butn_type.
    MOVE co_applserv TO ls_toolbar-function.
    MOVE ICON_SYM_REAL_SERVER TO ls_toolbar-icon.
    MOVE &apos;Appl. Server&apos;(210) to ls_toolbar-text.
    MOVE &apos;Applikationsserver&apos;(211) TO ls_toolbar-quickinfo.
    MOVE SPACE TO ls_toolbar-disabled.
    APPEND ls_toolbar TO pt_toolbar.

    CLEAR ls_toolbar.
    MOVE 0 TO ls_toolbar-butn_type.
    MOVE co_drives TO ls_toolbar-function.
    MOVE ICON_FOLDER TO ls_toolbar-icon.
    MOVE &apos;Laufwerke&apos;(232) to ls_toolbar-text.
    MOVE &apos;Laufmerke&apos;(233) TO ls_toolbar-quickinfo.
    MOVE SPACE TO ls_toolbar-disabled.
    APPEND ls_toolbar TO pt_toolbar.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="INIT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method INIT.

    call method super-&gt;init
      EXPORTING
        pf_name      = pf_name
        pf_full_name = pf_full_name
        pf_size      = pf_size
        pf_moddate   = pf_moddate
        pf_modtime   = pf_modtime
        pf_attr      = pf_attr
        pf_dir       = pf_dir.

    if full_name is initial.

      CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;DIRECTORY_GET_CURRENT
        CHANGING
          CURRENT_DIRECTORY            = full_name
        EXCEPTIONS
          DIRECTORY_GET_CURRENT_FAILED = 1
          CNTL_ERROR                   = 2
          others                       = 3.
      IF SY-SUBRC &lt;&gt; 0.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

      CALL METHOD CL_GUI_CFW=&gt;FLUSH
        EXCEPTIONS
          CNTL_SYSTEM_ERROR = 1
          CNTL_ERROR        = 2
          others            = 3.

      IF SY-SUBRC &lt;&gt; 0.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

      if full_name is initial.
        full_name = &apos;C:\&apos;.
      endif.



    endif.



endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="READ_DIR" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD read_dir.

  DATA lf_filter TYPE string.
  DATA lf_dir TYPE string.

  DATA lf_ref_file TYPE REF TO zapcmd_cl_knot.

  IF pf_mask IS INITIAL.
    lf_filter = filter.
  ELSE.
    lf_filter = pf_mask.
  ENDIF.
  lf_dir = full_name.

  DATA lt_fileinfo TYPE TABLE OF file_info.
  DATA ls_fileinfo TYPE file_info.
  FIELD-SYMBOLS &lt;ls_fileinfo&gt; TYPE file_info.
  DATA lf_count TYPE i.

  IF full_name = separator OR full_name = co_rootdir.
    CALL METHOD read_drives
      IMPORTING
        pt_filelist = pt_filelist.
    EXIT.
  ENDIF.

  CREATE OBJECT lf_ref_file TYPE zapcmd_cl_frontend_dir.
  IF lf_filter CA &apos;*&apos;.
    CALL METHOD lf_ref_file-&gt;init
      EXPORTING
        pf_name = &apos;..&apos;
        pf_size = 0
        pf_dir  = full_name.

    APPEND lf_ref_file TO pt_filelist.
  ENDIF.


  CALL METHOD cl_gui_frontend_services=&gt;directory_list_files
    EXPORTING
      directory                   = lf_dir
      filter                      = lf_filter
*      FILES_ONLY                  =
*      DIRECTORIES_ONLY            =
    CHANGING
      file_table                  = lt_fileinfo
      count                       = lf_count
    EXCEPTIONS
      cntl_error                  = 1
      directory_list_files_failed = 2
      wrong_parameter             = 3
      error_no_gui                = 4
      OTHERS                      = 5
          .
  IF sy-subrc &lt;&gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CALL METHOD cl_gui_cfw=&gt;flush
    EXCEPTIONS
      cntl_system_error = 1
      cntl_error        = 2
      OTHERS            = 3.

*    data lf_string type string.
*    loop at lt_fileinfo assigning &lt;ls_fileinfo&gt;.
*      DATA:
*        buffer TYPE XSTRING,
*        conv TYPE REF TO cl_abap_conv_out_ce.
*
*      conv = cl_abap_conv_out_ce=&gt;create(
**         encoding = &apos;1100&apos;
**         endian = &apos;L&apos;
*             ).
*
*      CALL METHOD conv-&gt;write( data = &lt;ls_fileinfo&gt;-filename ).
*
*      buffer = conv-&gt;get_buffer( ).
*
*      data conv2 TYPE REF TO cl_abap_conv_in_ce.
*
*      conv2 = cl_abap_conv_in_ce=&gt;create(
*               encoding = &apos;UTF-8&apos;
*               endian = &apos;L&apos;
*               input = buffer
*             ).
*
*      CALL METHOD conv2-&gt;read(
*        IMPORTING data = &lt;ls_fileinfo&gt;-filename
*      ).
*
*
*      lf_string = &lt;ls_fileinfo&gt;-filename.
*      CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;FILE_GET_SIZE
*        EXPORTING
*          FILE_NAME            = lf_string
*        IMPORTING
*          FILE_SIZE            = &lt;ls_fileinfo&gt;-filelength
*        EXCEPTIONS
*          FILE_GET_SIZE_FAILED = 1
*          CNTL_ERROR           = 2
*          ERROR_NO_GUI         = 3
*          NOT_SUPPORTED_BY_GUI = 4
*          others               = 5.
*
*    endloop.
*    CALL METHOD CL_GUI_CFW=&gt;FLUSH
*      EXCEPTIONS
*        CNTL_SYSTEM_ERROR = 1
*        CNTL_ERROR        = 2
*        others            = 3.


  SORT lt_fileinfo BY isdir DESCENDING filename.

  LOOP AT lt_fileinfo INTO ls_fileinfo.
    CASE ls_fileinfo-isdir.
      WHEN &apos;1&apos;.
        CREATE OBJECT lf_ref_file TYPE zapcmd_cl_frontend_dir.
      WHEN OTHERS.
        CREATE OBJECT lf_ref_file TYPE zapcmd_cl_frontend_file.
    ENDCASE.
    DATA lf_name TYPE string.
    lf_name = ls_fileinfo-filename.
    DATA lf_size TYPE p.
    lf_size = ls_fileinfo-filelength.
    DATA lf_modus TYPE char10.
    CLEAR lf_modus.
    IF ls_fileinfo-isreadonly &gt; 0.
      CONCATENATE lf_modus &apos;r&apos; INTO lf_modus.
    ELSE.
      CONCATENATE lf_modus &apos;-&apos; INTO lf_modus.
    ENDIF.
    IF ls_fileinfo-isarchived &gt; 0.
      CONCATENATE lf_modus &apos;a&apos; INTO lf_modus.
    ELSE.
      CONCATENATE lf_modus &apos;-&apos; INTO lf_modus.
    ENDIF.
    IF ls_fileinfo-ishidden &gt; 0.
      CONCATENATE lf_modus &apos;h&apos; INTO lf_modus.
    ELSE.
      CONCATENATE lf_modus &apos;-&apos; INTO lf_modus.
    ENDIF.
    IF ls_fileinfo-issystem &gt; 0.
      CONCATENATE lf_modus &apos;s&apos; INTO lf_modus.
    ELSE.
      CONCATENATE lf_modus &apos;-&apos; INTO lf_modus.
    ENDIF.




    CALL METHOD lf_ref_file-&gt;init
      EXPORTING
        pf_name    = lf_name
        pf_size    = lf_size
        pf_dir     = full_name
        pf_moddate = ls_fileinfo-writedate
        pf_modtime = ls_fileinfo-writetime
        pf_attr    = lf_modus.

    APPEND lf_ref_file TO pt_filelist.


  ENDLOOP.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FRONTEND_DIR" CMPNAME="READ_DRIVES" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FRONTEND_DIR" CMPNAME="READ_DRIVES" SCONAME="PT_FILELIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <source>method READ_DRIVES.
* ...
    data lf_drives(26) type c value &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;.
    data lf_index type i value 0.
    data lf_drive type string.
    data lf_name type string.
    data lf_drivetype type string.

    data lf_ref_file type ref to ZAPCMD_CL_KNOT.

    do 26 times.
      lf_drive = lf_drives+lf_index(1).
      concatenate lf_drive &apos;:&apos; separator into lf_drive.
      CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;GET_DRIVE_TYPE
        EXPORTING
          DRIVE                = lf_drive
        CHANGING
          DRIVE_TYPE           = lf_drivetype
        EXCEPTIONS
          CNTL_ERROR           = 1
          BAD_PARAMETER        = 2
          ERROR_NO_GUI         = 3
          NOT_SUPPORTED_BY_GUI = 4
          others               = 5.

      CALL METHOD CL_GUI_CFW=&gt;FLUSH
        EXCEPTIONS
          CNTL_SYSTEM_ERROR = 1
          CNTL_ERROR        = 2
          others            = 3.

      IF SY-SUBRC &lt;&gt; 0.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

      IF SY-SUBRC = 0 and not lf_drivetype is initial.

        concatenate lf_drive &apos; (&apos; lf_drivetype &apos;)&apos; into lf_name.
        create object lf_ref_file type ZAPCMD_CL_FRONTEND_DIR.
        call method lf_ref_file-&gt;init
          EXPORTING
            pf_full_name = lf_drive
            pf_name      = lf_name
            pf_size      = 0
            pf_dir       = full_name.

        append lf_ref_file to pt_filelist.

      ENDIF.

      lf_index = lf_index + 1.
    enddo.
endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_FILELIST" VERSION="1" LANGU="D" DESCRIPT="ALV-Grid mit einer Liste von Dateien" UUID="742C7169A7BD85479AEBF883FB9D9FCB" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <events CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="SET_ACTIVE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" EVTDECLTYP="0" BCEVTCAT="00"/>
  <publicSection>class ZAPCMD_CL_FILELIST definition
  public
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_FILELIST
*&quot;* do not include other source files here!!!
public section.
  type-pools ICON .

  data CF_ACTIVE type XFELD .
  data CF_REF_DIR type ref to ZAPCMD_CL_DIR .

  events SET_ACTIVE .

  methods LOAD_DIR
    importing
      !PF_UCOMM type SYUCOMM default &apos;FRONTEND&apos;
      !PF_DIR type STRING optional .
  methods RELOAD_DIR .
  methods ROOT_DIR .
  methods DRIVES .
  methods AL11 .
  methods SERVER .
  methods SHOW
    importing
      !PF_CONTAINER type ref to CL_GUI_CONTAINER .
  methods CONSTRUCTOR
    importing
      !PF_TYPE type SYUCOMM default &apos;FRONTEND&apos;
      !PF_DIR type STRING optional .
  methods REFRESH .
  methods HANDLE_ACTIVATE
    for event SET_ACTIVE of ZAPCMD_CL_FILELIST
    importing
      !SENDER .
  methods GET_FILES
    returning
      value(PTX_FILES) type ZAPCMD_TBL_FILELIST .
  methods GET_DIR
    returning
      value(PFX_DIR) type ref to ZAPCMD_CL_DIR .
  methods CHECK_ACTIVE
    importing
      !PF_CONTROL type ref to CL_GUI_CONTROL optional .
  methods UNDO .
  methods HANDLE_CONTEXTMENU
    for event CONTEXT_MENU_REQUEST of CL_GUI_ALV_GRID
    importing
      !E_OBJECT .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_FILELIST
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_FILELIST
*&quot;* do not include other source files here!!!
private section.

  data CF_GUI_ALV type ref to CL_GUI_ALV_GRID .
  data CT_FILES type ZAPCMD_TBL_FILELIST .
  data CT_FILEINFO type ZAPCMD_TBL_FILE_INFO .
  data:
    ct_undo type table of ref to zaPCMD_cl_dir .

  methods HANDLE_DOUBLECLICK
    for event DOUBLE_CLICK of CL_GUI_ALV_GRID
    importing
      !E_ROW .
  methods HANDLE_SET_TOOLBAR
    for event TOOLBAR of CL_GUI_ALV_GRID
    importing
      !E_OBJECT .
  methods HANDLE_USERCOMMAND
    for event USER_COMMAND of CL_GUI_ALV_GRID
    importing
      !E_UCOMM .
  methods GET_TITLE
    exporting
      !PF_TITLE type STRING .</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZAPCMD_CL_FILELIST" TYPEGROUP="ICON" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ICON</forwardDeclaration>
  <attribute CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CF_ACTIVE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="XFELD" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CF_GUI_ALV" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_ALV_GRID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CF_REF_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_CL_DIR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CT_FILEINFO" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILE_INFO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CT_FILES" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CT_UNDO" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="45 " TYPESRC_LENG="0 " TYPESRC="ct_undo type table of ref to zaPCMD_cl_dir
"/>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="AL11" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method AL11.

    if cf_ref_dir is bound.
      append cf_ref_dir to ct_undo.
    endif.

    data lf_area type ZAPCMD_SERVER_AREA.
    lf_area = cf_ref_dir-&gt;server_area.
    data lf_rootdir type string.
    lf_rootdir = cf_ref_dir-&gt;co_al11dir.

    case lf_area.
      when ZAPCMD_CL_KNOT=&gt;co_area_applserv.
        create object cf_ref_dir type zaPCMD_cl_SERVER_dir.
      when ZAPCMD_CL_KNOT=&gt;co_area_frontend.
        create object cf_ref_dir type zapcmd_cl_frontend_dir.
    endcase.

    call method cf_ref_dir-&gt;init
      EXPORTING
        pf_full_name = lf_rootdir.

    call method reload_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CHECK_ACTIVE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CHECK_ACTIVE" SCONAME="PF_CONTROL" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTROL" PAROPTIONL="X"/>
   <source>method CHECK_ACTIVE.

    data lf_control type ref to cl_gui_control.
    lf_control = pf_control.
    if lf_control is initial.

      CALL METHOD CL_GUI_CONTROL=&gt;GET_FOCUS
        IMPORTING
          CONTROL           = lf_control
        EXCEPTIONS
          CNTL_ERROR        = 1
          CNTL_SYSTEM_ERROR = 2
          others            = 3.
      IF SY-SUBRC &lt;&gt; 0.
*        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.


    endif.
    if lf_control = cf_gui_alv.
      raise event set_active.
    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CONSTRUCTOR" SCONAME="PF_TYPE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM" PARVALUE="&apos;FRONTEND&apos;" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="CONSTRUCTOR" SCONAME="PF_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.

     set handler handle_activate for all instances.

    call method load_dir
      exporting
        pf_ucomm = pf_type
        pf_dir = pf_dir
      .

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="DRIVES" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method DRIVES.

      if cf_ref_dir is bound.
      append cf_ref_dir to ct_undo.
    endif.

    data lf_area type ZAPCMD_SERVER_AREA.
    lf_area = cf_ref_dir-&gt;server_area.
    data lf_rootdir type string.
    lf_rootdir = cf_ref_dir-&gt;separator.

    case lf_area.
      when ZAPCMD_CL_KNOT=&gt;co_area_applserv.
        create object cf_ref_dir type zapcmd_cl_SERVER_dir.
      when ZAPCMD_CL_KNOT=&gt;co_area_frontend.
        create object cf_ref_dir type zapcmd_cl_frontend_dir.
    endcase.

    call method cf_ref_dir-&gt;init
      EXPORTING
        pf_full_name = lf_rootdir.

    call method reload_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="GET_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="GET_DIR" SCONAME="PFX_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZAPCMD_CL_DIR"/>
   <source>method GET_DIR.

   pfx_dir = cf_ref_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="GET_FILES" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="GET_FILES" SCONAME="PTX_FILES" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071021" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <source>method GET_FILES.

     data lf_lines type i.

    data lt_rows type LVC_T_ROW.
    data ls_row type lvc_s_row.
    call method cf_gui_alv-&gt;GET_SELECTED_ROWS
      IMPORTING
        ET_INDEX_ROWS = lt_rows.

    describe table lt_rows lines lf_lines.
    if lf_lines = 0.
      data lt_cells type LVC_T_CELL.
      data ls_cell type lvc_s_CELL.

      CALL METHOD CF_GUI_ALV-&gt;GET_SELECTED_CELLS
        IMPORTING
          ET_CELL = lt_cells.
      loop at lt_cells into ls_cell.
        append ls_cell-row_ID to lt_rows.
      endloop.
      delete adjacent duplicates from lt_rows comparing index.
    endif.

    loop at lt_rows into ls_row.

      data ls_fileinfo type zapcmd_file_descr.
      data lf_file type ref to zapcmd_cl_knot.
      read table ct_fileinfo index ls_row-index into ls_fileinfo.

      read table ct_files index ls_fileinfo-indx into lf_file.
      append lf_file to ptx_files.

    endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="GET_TITLE" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="GET_TITLE" SCONAME="PF_TITLE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method GET_TITLE.


    data lf_space type p.
    call method cf_ref_dir-&gt;get_freespace
      IMPORTING
        pf_space = lf_space.
    if lf_space &gt; 0.
      data lf_spacestr type string.
      call method zapcmd_cl_file=&gt;convert_size
        EXPORTING
          pf_size     = lf_space
        IMPORTING
          pfx_sizestr = lf_spacestr.

      concatenate
        &apos;&lt;&apos; cf_ref_dir-&gt;SERVER_AREA &apos;&gt; &apos;
        cf_ref_dir-&gt;full_name &apos; (&apos; lf_spacestr &apos; frei)&apos;
        into pf_title.
    else.
      concatenate
        &apos;&lt;&apos; cf_ref_dir-&gt;SERVER_AREA &apos;&gt; &apos;
        cf_ref_dir-&gt;full_name
        into pf_title.

    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_ACTIVATE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZAPCMD_CL_FILELIST" REFCMPNAME="SET_ACTIVE" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_ACTIVATE" SCONAME="SENDER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method HANDLE_ACTIVATE.

    if me = sender.
      cf_active = abap_true.
    else.
      cf_active = abap_false.
    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_CONTEXTMENU" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="CONTEXT_MENU_REQUEST" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_CONTEXTMENU" SCONAME="E_OBJECT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071016" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0"/>
   <source>method HANDLE_CONTEXTMENU.

  e_object-&gt;add_function(
      fcode       = zapcmd_cl_dir=&gt;co_rename
      text        = &apos;Umbenennen&apos;(231)
*      ICON        = ICON
*      FTYPE       = FTYPE
*      DISABLED    = DISABLED
*      HIDDEN      = HIDDEN
*      CHECKED     = CHECKED
*      ACCELERATOR = ACCELERATOR
         ).


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_DOUBLECLICK" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="DOUBLE_CLICK" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_DOUBLECLICK" SCONAME="E_ROW" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method HANDLE_DOUBLECLICK.

*    raise event set_active.
*    exporting sender = me.

    data lf_file type ref to zapcmd_cl_knot.
    data ls_fileinto type zapcmd_file_descr.
    data ls_fileinfo type zapcmd_file_descr.
    read table ct_fileinfo index e_row-index into ls_fileinfo.

    read table ct_files index ls_fileinfo-indx into lf_file.

    if lf_file-&gt;is_dir = abap_true.
      if cf_ref_dir is bound.
        append cf_ref_dir to ct_undo.
      endif.
      cf_ref_dir ?= lf_file.
      if sy-subrc = 0.
        call method cf_ref_dir-&gt;read_dir
          IMPORTING
            pt_filelist = ct_files
          exceptions
            permission_denied = 1.
        if sy-subrc &lt;&gt; 0.
          message id sy-msgid type &apos;I&apos; number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          exit.
        endif.

        refresh ct_fileinfo.
        data lf_index type i value 0.
        loop at ct_files into lf_file.
          lf_index = lf_index + 1.
          call method lf_file-&gt;get_info
            RECEIVING
              psx_fileinfo = ls_fileinto.
          ls_fileinto-indx = lf_index.
          append ls_fileinto to ct_fileinfo.
        endloop.

        call Method refresh.
      endif.
    else.
      call method lf_file-&gt;execute.
    endif.

    raise event set_active.

    CALL METHOD cl_gui_cfw=&gt;flush.
    if sy-subrc &lt;&gt; 0.
    endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_SET_TOOLBAR" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="TOOLBAR" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_SET_TOOLBAR" SCONAME="E_OBJECT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method HANDLE_SET_TOOLBAR.

    data: ls_toolbar TYPE stb_button.

    CLEAR ls_toolbar.
    MOVE 0 TO ls_toolbar-butn_type.
    MOVE zapcmd_cl_dir=&gt;co_refresh TO ls_toolbar-function.
    MOVE ICON_REFRESH TO ls_toolbar-icon.
    MOVE &apos;Refresh&apos;(201) TO ls_toolbar-quickinfo.
    MOVE SPACE TO ls_toolbar-disabled.
    APPEND ls_toolbar TO e_object-&gt;mt_toolbar.


    data lt_toolbar type ttb_button.
    call method cf_ref_dir-&gt;get_toolbar
      importing
        pt_toolbar = lt_toolbar.
    append lines of lt_toolbar to e_object-&gt;mt_toolbar.

*    MOVE 0 TO ls_toolbar-butn_type.
*    MOVE co_server TO ls_toolbar-function.
*    MOVE ICON_SYM_ALT_SERVER TO ls_toolbar-icon.
*    MOVE &apos;Server/Laufwerke&apos;(230) to ls_toolbar-text.
*    MOVE &apos;Server/Laufmerke&apos;(231) TO ls_toolbar-quickinfo.
*    MOVE SPACE TO ls_toolbar-disabled.
*    APPEND ls_toolbar TO e_object-&gt;mt_toolbar.
*


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_USERCOMMAND" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="CL_GUI_ALV_GRID" REFCMPNAME="USER_COMMAND" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="HANDLE_USERCOMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method HANDLE_USERCOMMAND.
    raise event set_active.
    case e_ucomm.
      when zapcmd_cl_dir=&gt;co_frontend or zapcmd_cl_dir=&gt;co_applserv.
        call method load_dir
        EXPORTING
          pf_ucomm = e_ucomm.
        call Method refresh.
      when zapcmd_cl_dir=&gt;co_refresh.
        call method reload_dir.
        call Method refresh.
      when zapcmd_cl_dir=&gt;co_server.
        call method server.
        call method refresh.
      when zapcmd_cl_dir=&gt;co_drives.
        call method drives.
        call method refresh.
      when zapcmd_cl_dir=&gt;co_AL11.
        call method al11.
        call method refresh.
      when zapcmd_cl_dir=&gt;co_rename.
        data lt_file type ZAPCMD_TBL_filelist.
        data lf_file type ref to ZAPCMD_CL_KNOT.
        lt_file = me-&gt;get_files( ).
        loop at lt_file into lf_file.

          data lt_fields type table of sval.
          data ls_field type sval.
          ls_field-tabname = &apos;ZAPCMD_FILE_DESCR&apos;.
          ls_field-fieldname = &apos;NAME&apos;.
          ls_field-FIELD_OBL = &apos;X&apos;.
          ls_field-value = lf_file-&gt;name.
          APPEND ls_field to lt_fields.

          CALL FUNCTION &apos;POPUP_GET_VALUES&apos;
            EXPORTING
*             NO_VALUE_CHECK        = &apos; &apos;
              popup_title           = &apos;Neuer Dateiname&apos;
*             START_COLUMN          = &apos;5&apos;
*             START_ROW             = &apos;5&apos;
*           IMPORTING
*             RETURNCODE            = RETURNCODE
            TABLES
              fields                = lt_fields
*           EXCEPTIONS
*             ERROR_IN_FIELDS       = 1
*             OTHERS                = 2
                    .
          IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDIF.
          data lf_newname type zapcmd_filename.
          read table lt_fields index 1 into ls_field.
          lf_newname = ls_field-value.
          if lf_newname &lt;&gt; lf_file-&gt;name.
            lf_file-&gt;rename( lf_newname ).
          endif.

        endloop.
        reload_dir( ).
        refresh( ).

      endcase.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="LOAD_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="LOAD_DIR" SCONAME="PF_UCOMM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM" PARVALUE="&apos;FRONTEND&apos;" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="LOAD_DIR" SCONAME="PF_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method LOAD_DIR.

    if cf_ref_dir is bound.
      append cf_ref_dir to ct_undo.
    endif.

    case pf_ucomm.
      when ZAPCMD_CL_DIR=&gt;co_applserv.
        create object cf_ref_dir type zapcmd_cl_SERVER_dir.
      when ZAPCMD_CL_DIR=&gt;co_frontend.
        create object cf_ref_dir type zapcmd_cl_frontend_dir.
      when others.
        if cf_ref_dir is bound and cf_ref_dir-&gt;server_area = &apos;A&apos;.
          create object cf_ref_dir type zapcmd_cl_SERVER_dir.
        else.
          create object cf_ref_dir type zapcmd_cl_frontend_dir.
        endif.
    endcase.

    call method cf_ref_dir-&gt;init
      EXPORTING
        pf_full_name = pf_dir.

    call method reload_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="REFRESH" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method REFRESH.

    data ls_layout type LVC_S_LAYO.


    data lf_title type string.
    call method get_title
      importing
        pf_title = lf_title.


    call method cf_gui_alv-&gt;get_frontend_layout
      IMPORTING
        es_layout = ls_layout.
    ls_layout-GRID_TITLE = lf_title.
    call method cf_gui_alv-&gt;set_frontend_layout
      EXPORTING
        is_layout = ls_layout.
    CALL METHOD cf_gui_alv-&gt;refresh_table_display.

*  CALL METHOD cl_gui_control=&gt;set_focus EXPORTING control = grid2.
    CALL METHOD cl_gui_cfw=&gt;flush.
    IF sy-subrc ne 0.
      data lf_repid type string.
      lf_repid = sy-repid.
* add your handling, for example
      CALL FUNCTION &apos;POPUP_TO_INFORM&apos;
           EXPORTING
                titel = lf_repid
                txt2  = sy-subrc
                txt1  = &apos;Error in FLush&apos;(500).
    ENDIF.

    raise event set_active.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="RELOAD_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method RELOAD_DIR.


    data ls_fileinto type zapcmd_file_descr.

    data lf_file type ref to zapcmd_cl_knot.

    call method cf_ref_dir-&gt;read_dir
      IMPORTING
        pt_filelist = ct_files
      exceptions
        PERMISSION_DENIED = 1.

    if sy-subrc &lt;&gt; 0.
      message id sy-msgid type &apos;I&apos; number sy-msgno
        with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      exit.
    endif.

    refresh ct_fileinfo.
    data lf_index type i value 0.
    loop at ct_files into lf_file.
      lf_index = lf_index + 1.
      call method lf_file-&gt;get_info
        RECEIVING
          psx_fileinfo = ls_fileinto.
      ls_fileinto-indx = lf_index.
      append ls_fileinto to ct_fileinfo.
    endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="ROOT_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method ROOT_DIR.

     if cf_ref_dir is bound.
      append cf_ref_dir to ct_undo.
    endif.

    data lf_area type ZAPCMD_SERVER_AREA.
    lf_area = cf_ref_dir-&gt;server_area.
    data lf_rootdir type string.
    lf_rootdir = cf_ref_dir-&gt;separator.

    case lf_area.
      when ZAPCMD_CL_KNOT=&gt;co_area_applserv.
        create object cf_ref_dir type zapcmd_cl_SERVER_dir.
      when ZAPCMD_CL_KNOT=&gt;co_area_frontend.
        create object cf_ref_dir type zapcmd_cl_frontend_dir.
    endcase.

    call method cf_ref_dir-&gt;init
      EXPORTING
        pf_full_name = lf_rootdir.

    call method reload_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="SERVER" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method SERVER.

    if cf_ref_dir is bound.
      append cf_ref_dir to ct_undo.
    endif.

    data lf_area type Zapcmd_SERVER_AREA.
    lf_area = cf_ref_dir-&gt;server_area.
    data lf_rootdir type string.
    lf_rootdir = cf_ref_dir-&gt;co_rootdir.

    case lf_area.
      when ZApcmd_CL_KNOT=&gt;co_area_applserv.
        create object cf_ref_dir type zapcmd_cl_SERVER_dir.
      when ZApcmd_CL_KNOT=&gt;co_area_frontend.
        create object cf_ref_dir type zapcmd_cl_frontend_dir.
    endcase.

    call method cf_ref_dir-&gt;init
      EXPORTING
        pf_full_name = lf_rootdir.

    call method reload_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="SHOW" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="SHOW" SCONAME="PF_CONTAINER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER"/>
   <source>method SHOW.

      data lf_title type string.
      call method get_title
        importing
          pf_title = lf_title.

    IF cf_gui_alv IS INITIAL.
      CREATE OBJECT cf_gui_alv
           EXPORTING I_PARENT = pf_container.

      set handler handle_doubleclick for cf_gui_alv.
      set handler handle_set_toolbar for cf_gui_alv.
      set handler handle_usercommand for cf_gui_alv.
      set handler handle_contextmenu  for cf_gui_alv.

      data ls_fileinto type zapcmd_file_descr.



      data ls_layout type LVC_S_LAYO.
      ls_layout-ZEBRA = &apos;X&apos;.
      ls_layout-CWIDTH_OPT = &apos;X&apos;.
      ls_layout-NO_HEADERS = &apos;X&apos;.
      ls_layout-SEL_MODE = &apos;A&apos;.
      ls_layout-SMALLTITLE = &apos;X&apos;.
      ls_layout-GRID_TITLE = lf_title.
      ls_layout-CWIDTH_OPT = &apos;X&apos;.



      data lt_toolbarexcludings type UI_FUNCTIONS.
      refresh lt_toolbarexcludings.
      append cf_gui_alv-&gt;MC_FC_SUM to lt_toolbarexcludings.
      append cf_gui_alv-&gt;MC_FC_SUBTOT to lt_toolbarexcludings.
      append cf_gui_alv-&gt;MC_FC_FIND to lt_toolbarexcludings.
      append cf_gui_alv-&gt;MC_FC_VIEWS to lt_toolbarexcludings.
      append cf_gui_alv-&gt;MC_FC_INFO to lt_toolbarexcludings.
      append cf_gui_alv-&gt;MC_FC_GRAPH to lt_toolbarexcludings.


      data lt_fieldcatalog type LVC_T_FCAT.
      data ls_fieldcatalog type LVC_S_FCAT.

      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;ICON&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Icon&apos;(117).
      ls_fieldcatalog-ICON = abap_true.
      append ls_fieldcatalog to lt_fieldcatalog.


      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;SHORTNAME&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Name&apos;(110).
      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;EXTENSION&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Erweiterung&apos;(116).
      append ls_fieldcatalog to lt_fieldcatalog.

      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;FULL_NAME&apos;.
      ls_fieldcatalog-NO_OUT = &apos;X&apos;.
      append ls_fieldcatalog to lt_fieldcatalog.
*      clear ls_fieldcatalog.
*      ls_fieldcatalog-FIELDNAME = &apos;FILESIZE&apos;.
*      ls_fieldcatalog-NO_OUT = &apos;X&apos;.
*      append ls_fieldcatalog to lt_fieldcatalog.
*      clear ls_fieldcatalog.
*      ls_fieldcatalog-FIELDNAME = &apos;SIZESTR&apos;.
*      ls_fieldcatalog-COLTEXT = &apos;Größe&apos;(111).
*      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;FILESIZE&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Größe&apos;(111).
      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;SIZESTR&apos;.
      ls_fieldcatalog-NO_OUT = &apos;X&apos;.
      append ls_fieldcatalog to lt_fieldcatalog.

      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;MODDATE&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Datum&apos;(112).
      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;MODTIME&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Zeit&apos;(113).
      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;ATTR&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Attr.&apos;(114).
      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;FILETYPE&apos;.
      ls_fieldcatalog-NO_OUT = &apos;X&apos;.
      append ls_fieldcatalog to lt_fieldcatalog.
      clear ls_fieldcatalog.
      ls_fieldcatalog-FIELDNAME = &apos;INDEX&apos;.
      ls_fieldcatalog-COLTEXT = &apos;Index.&apos;(115).
      ls_fieldcatalog-NO_OUT = &apos;X&apos;.
      append ls_fieldcatalog to lt_fieldcatalog.



      CALL METHOD cf_gui_alv-&gt;SET_TABLE_FOR_FIRST_DISPLAY
           EXPORTING
*          I_STRUCTURE_NAME = &apos;ZAVL_FILE_DESCR&apos;
             IS_LAYOUT = ls_layout
             IT_TOOLBAR_EXCLUDING = lt_toolbarexcludings
           CHANGING
             it_fieldcatalog = lt_fieldcatalog
             IT_OUTTAB        = ct_fileinfo.
    else.
      cf_gui_alv-&gt;set_adjust_design(
        EXPORTING
          adjust_design     = 1
*        EXCEPTIONS
*          CNTL_ERROR        = 1
*          CNTL_SYSTEM_ERROR = 2
*          others            = 3
             ).
*      IF sy-subrc &lt;&gt; 0.
*       MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                  WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*      ENDIF.

      call method cf_gui_alv-&gt;get_frontend_layout
        importing
          es_layout = ls_layout.
      ls_layout-GRID_TITLE = lf_title.
      call method cf_gui_alv-&gt;set_frontend_layout
        exporting
          is_layout = ls_layout.
      CALL METHOD cf_gui_alv-&gt;refresh_table_display.

    ENDIF.

*  CALL METHOD cl_gui_control=&gt;set_focus EXPORTING control = grid2.
    CALL METHOD cl_gui_cfw=&gt;flush.
    IF sy-subrc ne 0.
      data lf_repid type string.
      lf_repid = sy-repid.
* add your handling, for example
      CALL FUNCTION &apos;POPUP_TO_INFORM&apos;
           EXPORTING
                titel = lf_repid
                txt2  = sy-subrc
                txt1  = &apos;Error in FLush&apos;(500).
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILELIST" CMPNAME="UNDO" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method UNDO.

    data l_lines type i.
    l_lines = lines( ct_undo ).
    if l_lines = 0.
      return.
    else.
      read table ct_undo index l_lines
        into cf_ref_dir.
      delete ct_undo index l_lines.
      call method reload_dir.
      call Method refresh.
    endif.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_FILE" VERSION="1" LANGU="D" DESCRIPT="Klasse für eine Datei" UUID="7E0ABE649B14E74BB8196427AF44F331" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZAPCMD_CL_KNOT">
  <publicSection>class ZAPCMD_CL_FILE definition
  public
  inheriting from ZAPCMD_CL_KNOT
  abstract
  create public .

*&quot;* public components of class ZAPCMD_CL_FILE
*&quot;* do not include other source files here!!!
public section.

  methods READ_TEXT
  abstract
    exporting
      !PF_FILESIZE type I
      !PT_FILE type ZAPCMD_TBL_STRING .
  methods READ_BIN
  abstract
    exporting
      !PF_FILESIZE type I
      !PT_FILE type ZAPCMD_TBL_XSTRING .
  methods WRITE_TEXT
  abstract
    importing
      !PT_FILE type ZAPCMD_TBL_STRING .
  methods WRITE_BIN
  abstract
    importing
      !PT_FILE type ZAPCMD_TBL_XSTRING
      !PF_FILESIZE type I .
  class-methods TEXT2STREAM
    importing
      !PT_TEXT type ZAPCMD_TBL_STRING
    returning
      value(PFX_STREAM) type STRING .
  class-methods STREAM2TEXT
    importing
      !PF_STREAM type STRING
    returning
      value(PTX_TEXT) type ZAPCMD_TBL_STRING .

  methods INIT
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_FILE
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_FILE
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZAPCMD_CL_FILE" REFCLSNAME="ZAPCMD_CL_KNOT" VERSION="1" STATE="1" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000">
   <redefinition CLSNAME="ZAPCMD_CL_FILE" REFCLSNAME="ZAPCMD_CL_KNOT" VERSION="1" MTDNAME="INIT"/>
  </inheritance>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method INIT.
   call method super-&gt;init
      EXPORTING
        pf_name      = pf_name
        pf_full_name = pf_full_name
        pf_size      = pf_size
        pf_moddate   = pf_moddate
        pf_modtime   = pf_modtime
        pf_attr      = pf_attr
        pf_dir       = pf_dir.

    data lf_index type i.
    data lf_lastdotindex type i.
    data lf_len type i.
    lf_index = 0.
    lf_lastdotindex = 0.
    lf_len = strlen( name ).

    do.
      if lf_index &gt;= lf_len.
        exit.
      endif.
      if name+lf_index(1) = &apos;.&apos;.
        lf_lastdotindex =  lf_index.
      endif.
      lf_index = lf_index  + 1.
    enddo.
    if lf_lastdotindex &gt; 1 and lf_lastdotindex &lt; lf_len.

      lf_lastdotindex = lf_lastdotindex + 1.
      extension = name+lf_lastdotindex.
      lf_lastdotindex = lf_lastdotindex - 1.
      shortname = name(lf_lastdotindex).

    endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_BIN" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_BIN" SCONAME="PF_FILESIZE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_BIN" SCONAME="PT_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_XSTRING"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_TEXT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_TEXT" SCONAME="PF_FILESIZE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="READ_TEXT" SCONAME="PT_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_STRING"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="STREAM2TEXT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="STREAM2TEXT" SCONAME="PF_STREAM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="STREAM2TEXT" SCONAME="PTX_TEXT" VERSION="1" LANGU="D" DESCRIPT="Tabelle mit Zeichenketten" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_STRING"/>
   <source>METHOD stream2text.
  DATA lf_stream TYPE string.
  lf_stream = pf_stream.
  REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=&gt;cr_lf IN lf_stream
       WITH cl_abap_char_utilities=&gt;newline.
  SPLIT lf_stream AT cl_abap_char_utilities=&gt;newline
    INTO TABLE ptx_text.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="TEXT2STREAM" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="TEXT2STREAM" SCONAME="PT_TEXT" VERSION="1" LANGU="D" DESCRIPT="Tabelle mit Zeichenketten" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_STRING"/>
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="TEXT2STREAM" SCONAME="PFX_STREAM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method TEXT2STREAM.
  data lf_line like line of pt_text.
  loop at pt_text into lf_line.
    if sy-tabix &gt; 1.
      CONCATENATE pfx_stream cl_abap_char_utilities=&gt;newline lf_line
          INTO pfx_stream.
    else.
      pfx_stream = lf_line.
    endif.
  endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_BIN" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_BIN" SCONAME="PT_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_XSTRING"/>
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_BIN" SCONAME="PF_FILESIZE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_TEXT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_FILE" CMPNAME="WRITE_TEXT" SCONAME="PT_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_STRING"/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_EDITOR" VERSION="1" LANGU="D" DESCRIPT="Einfacher Editor" UUID="564D76C95A1EA14BA82A67109E764803" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZAPCMD_CL_EDITOR definition
  public
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_EDITOR
*&quot;* do not include other source files here!!!
public section.

  class-data GF_INSTANCE type ref to ZAPCMD_CL_EDITOR .
  data CF_GUI_EDIT type ref to CL_GUI_TEXTEDIT .
  data CF_FILE type ref to ZAPCMD_CL_FILE .
  data CT_FILE type STRING .
  data CF_READONLY type XFELD .

  methods SHOW
    importing
      !PF_CONTAINER type ref to CL_GUI_CONTAINER .
  methods CONSTRUCTOR .
  methods SAVE .
  methods USER_COMMAND
    changing
      !E_UCOMM type SYUCOMM .
  methods SET_FILE
    importing
      !PF_FILE type ref to ZAPCMD_CL_FILE .
  methods SET_READONLY
    importing
      !PF_READONLY type XFELD default &apos;X&apos; .
  methods FREE .
  methods GET_TITLE
    exporting
      !PF_TITLE1 type C
      !PF_TITLE2 type C
      !PF_TITLE3 type C
      !PF_TITLE4 type C .
  class-methods CLASS_CONSTRUCTOR .
  class-methods CALL_EDITOR
    importing
      !PF_FILE type ref to ZAPCMD_CL_FILE
      !PF_READONLY type XFELD .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_EDITOR
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_EDITOR
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CF_FILE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_CL_FILE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CF_GUI_EDIT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_TEXTEDIT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CF_READONLY" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="XFELD" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CT_FILE" VERSION="1" LANGU="D" DESCRIPT="Tabelle mit Zeichenketten" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="GF_INSTANCE" VERSION="1" LANGU="D" DESCRIPT="Einfacher Editor" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_CL_EDITOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CALL_EDITOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CALL_EDITOR" SCONAME="PF_FILE" VERSION="1" LANGU="D" DESCRIPT="Klasse für eine Datei" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_CL_FILE"/>
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CALL_EDITOR" SCONAME="PF_READONLY" VERSION="1" LANGU="D" DESCRIPT="Feld zum Ankreuzen" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD"/>
   <source>METHOD call_editor.

  CALL METHOD gf_instance-&gt;set_file
    EXPORTING
      pf_file = pf_file.

  CALL METHOD gf_instance-&gt;set_readonly
    EXPORTING
      pf_readonly = pf_readonly.

  CALL FUNCTION &apos;ZAPCMD_CALL_EDITOR&apos;
    EXPORTING
      pf_editor = gf_instance.

*        call screen 200.

  CALL METHOD gf_instance-&gt;free.


ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CLASS_CONSTRUCTOR.

  CREATE OBJECT gf_instance.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.
endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="FREE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method FREE.

  call method CF_GUI_EDIT-&gt;free.
    free CF_GUI_EDIT.
    clear cf_file.
    clear cf_readonly.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="GET_TITLE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="GET_TITLE" SCONAME="PF_TITLE1" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="C"/>
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="GET_TITLE" SCONAME="PF_TITLE2" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="C"/>
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="GET_TITLE" SCONAME="PF_TITLE3" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="C"/>
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="GET_TITLE" SCONAME="PF_TITLE4" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="C"/>
   <source>method GET_TITLE.

*    pf_title1 = cf_file-&gt;full_name.
    pf_title1 = cf_file-&gt;name.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SAVE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD save.

  DATA lt_data TYPE zapcmd_tbl_string.
  DATA lf_is_modified TYPE i.

  DATA lf_data TYPE string.

  IF cf_readonly IS INITIAL.
    cf_gui_edit-&gt;get_textstream(
      EXPORTING
        only_when_modified     = 1
      IMPORTING
        text                   = lf_data
        is_modified            = lf_is_modified
      EXCEPTIONS
        error_cntl_call_method = 1
        not_supported_by_gui   = 2
        OTHERS                 = 3
           ).
    IF sy-subrc &lt;&gt; 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

*
*      CALL METHOD CF_GUI_EDIT-&gt;GET_TEXT_AS_R3TABLE
*        EXPORTING
*          ONLY_WHEN_MODIFIED     = 1
*        IMPORTING
*          TABLE                  = lt_data
*          IS_MODIFIED            = lf_is_modified
*        EXCEPTIONS
*          ERROR_DP               = 1
*          ERROR_CNTL_CALL_METHOD = 2
*          ERROR_DP_CREATE        = 3
*          POTENTIAL_DATA_LOSS    = 4
*          others                 = 5.
*      IF SY-SUBRC &lt;&gt; 0.
**            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**                       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*      ENDIF.

    CALL METHOD cl_gui_cfw=&gt;flush.
    IF lf_is_modified &lt;&gt; 0.
      lt_data = zapcmd_cl_file=&gt;stream2text( lf_data ).

      CALL METHOD cf_file-&gt;write_text
        EXPORTING
          pt_file = lt_data.
      CALL METHOD cf_gui_edit-&gt;set_textmodified_status
        EXPORTING
          status                 = 0
        EXCEPTIONS
          error_cntl_call_method = 1
          OTHERS                 = 2.
      IF sy-subrc &lt;&gt; 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.


    ENDIF.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SET_FILE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SET_FILE" SCONAME="PF_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_CL_FILE"/>
   <source>method SET_FILE.

  cf_file = pf_file.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SET_READONLY" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SET_READONLY" SCONAME="PF_READONLY" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PARVALUE="&apos;X&apos;" PAROPTIONL="X"/>
   <source>method SET_READONLY.

  cf_readonly = pf_readonly.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SHOW" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="SHOW" SCONAME="PF_CONTAINER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER"/>
   <source>METHOD show.

  DATA lt_data TYPE zapcmd_tbl_string.

  IF cf_gui_edit IS INITIAL.
    CREATE OBJECT cf_gui_edit
      EXPORTING
        parent = pf_container
        wordwrap_mode = 0.

*      catch system-exceptions DYN_CALL_METH_NOT_FOUND = 1.
*        data lf_method type char40.
*        lf_method = &apos;CF_GUI_EDIT-&gt;SET_FONT_FIXED&apos;.
*
*        call method (lf_method)
*          exporting
*            mode = 1.
*      endcatch.
    cf_gui_edit-&gt;set_font_fixed( 1 ).

    CALL METHOD cf_file-&gt;read_text
      IMPORTING
        pt_file = lt_data.

    ct_file = zapcmd_cl_file=&gt;text2stream( lt_data ).


    cf_gui_edit-&gt;set_textstream(
      EXPORTING
        text                   = ct_file
      EXCEPTIONS
        error_cntl_call_method = 1
        not_supported_by_gui   = 2
        OTHERS                 = 3
           ).
    IF sy-subrc &lt;&gt; 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.



  ENDIF.

  IF cf_readonly = &apos;X&apos;.
    CALL METHOD cf_gui_edit-&gt;set_readonly_mode
      EXPORTING
        readonly_mode = 1.
  ELSE.
    CALL METHOD cf_gui_edit-&gt;set_readonly_mode
      EXPORTING
        readonly_mode = 0.
  ENDIF.

*    CALL METHOD cl_gui_cfw=&gt;flush.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="USER_COMMAND" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_EDITOR" CMPNAME="USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM"/>
   <source>method USER_COMMAND.

    data lf_is_modified type i.
    data lf_answer type char1.

    case e_ucomm.
      when &apos;BACK&apos; or &apos;EXIT&apos; or &apos;REFRESH&apos;.
        if cf_readonly is initial.

          CALL METHOD CF_GUI_EDIT-&gt;GET_TEXTMODIFIED_STATUS
            IMPORTING
              STATUS                 = lf_is_modified
            EXCEPTIONS
              ERROR_CNTL_CALL_METHOD = 1
              others                 = 2
                  .
          IF SY-SUBRC &lt;&gt; 0.
            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDIF.

          if lf_is_modified &lt;&gt; 0.
            CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
              EXPORTING
                TITLEBAR                    = &apos;Text verändert.&apos;(300)
*               DIAGNOSE_OBJECT             = &apos; &apos;
            TEXT_QUESTION    = &apos;Soll der Text gespeichert werden?&apos;(301)
*               TEXT_BUTTON_1               = &apos;Ja&apos;(001)
*               ICON_BUTTON_1               = &apos; &apos;
*               TEXT_BUTTON_2               = &apos;Nein&apos;(002)
*               ICON_BUTTON_2               = &apos; &apos;
*               DEFAULT_BUTTON              = &apos;1&apos;
*               DISPLAY_CANCEL_BUTTON       = &apos;X&apos;
*               USERDEFINED_F1_HELP         = &apos; &apos;
*               START_COLUMN                = 25
*               START_ROW                   = 6
*               POPUP_TYPE                  =
             IMPORTING
               ANSWER                      = lf_answer
*             TABLES
*               PARAMETER                   =
*             EXCEPTIONS
*               TEXT_NOT_FOUND              = 1
*               OTHERS                      = 2
                      .
            IF SY-SUBRC &lt;&gt; 0.
              MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            ENDIF.

            if lf_answer = &apos;1&apos;.
              call method save.
            endif.
            if lf_answer = &apos;A&apos;.
              e_ucomm = &apos;&apos;.
            endif.

          endif.

        endif.
      when &apos;SAVE&apos;.
        call method save.


    endcase.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_DIR" VERSION="1" LANGU="D" DESCRIPT="Klasse für ein Verzeichnis" UUID="6B94065EE6BCC94C9D624251DC942741" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZAPCMD_CL_KNOT">
  <publicSection>class ZAPCMD_CL_DIR definition
  public
  inheriting from ZAPCMD_CL_KNOT
  abstract
  create public .

*&quot;* public components of class ZAPCMD_CL_DIR
*&quot;* do not include other source files here!!!
public section.

  constants CO_DEFAULT type SYUCOMM value &apos;DEFAULT&apos;. &quot;#EC NOTEXT
  constants CO_FRONTEND type SYUCOMM value &apos;FRONTEND&apos;. &quot;#EC NOTEXT
  constants CO_APPLSERV type SYUCOMM value &apos;APPLSERV&apos;. &quot;#EC NOTEXT
  constants CO_SERVER type SYUCOMM value &apos;SERVER&apos;. &quot;#EC NOTEXT
  constants CO_DRIVES type SYUCOMM value &apos;DRIVES&apos;. &quot;#EC NOTEXT
  constants CO_RENAME type SYUCOMM value &apos;RENAME&apos;. &quot;#EC NOTEXT
  constants CO_REFRESH type SYUCOMM value &apos;REFRESH&apos;. &quot;#EC NOTEXT
  constants CO_AL11 type SYUCOMM value &apos;AL11&apos;. &quot;#EC NOTEXT
  data FILTER type STRING .

  methods CONSTRUCTOR .
  methods READ_DIR
  abstract
    importing
      !PF_MASK type ZAPCMD_FILENAME optional
    exporting
      value(PT_FILELIST) type ZAPCMD_TBL_FILELIST
    exceptions
      PERMISSION_DENIED .
  methods CREATE_FILE
  abstract
    importing
      value(PF_FILENAME) type STRING
    exporting
      !PF_FILE type ref to ZAPCMD_CL_FILE .
  methods CREATE_DIR
  abstract
    importing
      value(PF_FILENAME) type STRING
    exporting
      !PF_FILE type ref to ZAPCMD_CL_DIR .
  methods GET_FREESPACE
  abstract
    exporting
      !PF_SPACE type P .
  methods GET_TOOLBAR
  abstract
    exporting
      !PT_TOOLBAR type TTB_BUTTON .
  type-pools ABAP .
  methods CHECK_FILEEXIST
    importing
      !PF_FILENAME type CSEQUENCE
    returning
      value(PFX_EXIST) type ABAP_BOOL .

  methods INIT
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_DIR
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_DIR
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZAPCMD_CL_DIR" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_AL11" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071016" ATTDECLTYP="2" ATTVALUE="&apos;AL11&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_APPLSERV" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;APPLSERV&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_DEFAULT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;DEFAULT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_DRIVES" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;DRIVES&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_FRONTEND" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;FRONTEND&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_REFRESH" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071016" ATTDECLTYP="2" ATTVALUE="&apos;REFRESH&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_RENAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20071016" CHANGEDBY="BCUSER" CHANGEDON="20071016" ATTDECLTYP="2" ATTVALUE="&apos;RENAME&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CO_SERVER" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;SERVER&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYUCOMM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_DIR" CMPNAME="FILTER" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071016" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZAPCMD_CL_DIR" REFCLSNAME="ZAPCMD_CL_KNOT" VERSION="1" STATE="1" AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008">
   <redefinition CLSNAME="ZAPCMD_CL_DIR" REFCLSNAME="ZAPCMD_CL_KNOT" VERSION="1" MTDNAME="INIT"/>
  </inheritance>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CHECK_FILEEXIST" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071113" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CHECK_FILEEXIST" SCONAME="PF_FILENAME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071113" CHANGEDBY="BCUSER" CHANGEDON="20071113" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE"/>
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CHECK_FILEEXIST" SCONAME="PFX_EXIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071113" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>method CHECK_FILEEXIST.

data LT_filelist type ZAPCMD_TBL_FILELIST.
data lf_mask type zapcmd_filename.
lf_mask = pf_filename.
read_dir(
  EXPORTING
    PF_MASK           = lf_mask
  IMPORTING
    PT_FILELIST       = LT_FILELIST
  EXCEPTIONS
    PERMISSION_DENIED = 1
    others            = 2
       ).
IF sy-subrc &lt;&gt; 0.
  clear pfx_exist.
  return.
ENDIF.
if lt_filelist is initial.
  pfx_exist = abap_false.
else.
  pfx_exist = abap_true.
endif.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.

  CALL METHOD super-&gt;constructor.

  filetype = &apos;DIR&apos;.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_DIR" SCONAME="PF_FILENAME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_DIR" SCONAME="PF_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_CL_DIR"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_FILE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_FILE" SCONAME="PF_FILENAME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071113" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="CREATE_FILE" SCONAME="PF_FILE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_CL_FILE"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_FREESPACE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_FREESPACE" SCONAME="PF_SPACE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="P"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_TOOLBAR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="GET_TOOLBAR" SCONAME="PT_TOOLBAR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TTB_BUTTON"/>
  </method>
  <method CLSNAME="ZAPCMD_CL_KNOT" CMPNAME="INIT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method INIT.
   call method super-&gt;init
      EXPORTING
        pf_name      = pf_name
        pf_full_name = pf_full_name
        pf_size      = pf_size
        pf_moddate   = pf_moddate
        pf_modtime   = pf_modtime
        pf_attr      = pf_attr
        pf_dir       = pf_dir.

  IS_DIR = &apos;X&apos;.

  data lf_temp type i.
  data lf_temp2 type string.
  concatenate separator &apos;..&apos; into lf_temp2.
  lf_temp = strlen( full_name ).
  lf_temp = lf_temp - strlen( lf_temp2 ).
  if lf_temp &gt; 0.
    if full_name+lf_temp = lf_temp2.
      full_name = full_name(lf_temp).
      search full_name for separator.
      if sy-subrc = 0.
        lf_temp = SY-FDPOS + strlen( separator ).
        do.
          search full_name+lf_temp for separator.
          if sy-subrc = 0.
            lf_temp = lf_temp + SY-FDPOS + strlen( separator ).
          else.
            exit.
          endif.
        enddo.
        lf_temp = lf_temp - strlen( separator ).
        full_name = full_name(lf_temp).
        search full_name for separator.
        if sy-subrc &lt;&gt; 0.
          concatenate full_name separator into full_name.
        endif.
      else.
        full_name = separator.
      endif.
    endif.
  endif.


*  concatenate &apos;[&apos; name &apos;]&apos; into name.
  filesize = 0.
  clear sizestr.
  filter = &apos;*.*&apos;.
endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_DIR" CMPNAME="READ_DIR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071008" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="READ_DIR" SCONAME="PF_MASK" VERSION="1" LANGU="D" DESCRIPT="Dateiname ohne Pfad" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071113" CHANGEDBY="BCUSER" CHANGEDON="20071113" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_FILENAME" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_DIR" CMPNAME="READ_DIR" SCONAME="PT_FILELIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDBY="BCUSER" CHANGEDON="20071113" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <exception CLSNAME="ZAPCMD_CL_DIR" CMPNAME="READ_DIR" SCONAME="PERMISSION_DENIED" VERSION="1" LANGU="D" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071008" CHANGEDON="00000000"/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_COMMANDER" VERSION="1" LANGU="D" UUID="5F4D0EF945C6A24BB6A066F5882267D8" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZAPCMD_CL_COMMANDER definition
  public
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_COMMANDER
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  data CF_GUI_SPLITTER_CONTAINER type ref to CL_GUI_EASY_SPLITTER_CONTAINER .
  data CF_CONTAINER_LEFT type ref to CL_GUI_CONTAINER .
  data CF_CONTAINER_RIGHT type ref to CL_GUI_CONTAINER .
  data CF_DIRNAME type ref to STRING .
  data CF_FILESLEFT type ref to ZAPCMD_CL_FILELIST .
  data CF_FILESRIGHT type ref to ZAPCMD_CL_FILELIST .
  data CF_ACTIVELIST type ref to ZAPCMD_CL_FILELIST .

  methods SHOW
    importing
      !PF_CONTAINER type ref to CL_GUI_CONTAINER .
  methods CONSTRUCTOR
    importing
      !PF_LEFT_TYPE type SYUCOMM default &apos;FRONTEND&apos;
      !PF_LEFT_DIR type STRING optional
      !PF_RIGHT_TYPE type SYUCOMM default &apos;FRONTEND&apos;
      !PF_RIGHT_DIR type STRING optional
      !PF_DIRNAME type ref to STRING optional .
  methods COPY
    importing
      !PT_FILES type ZAPCMD_TBL_FILELIST
      !PF_DESTDIR type ref to ZAPCMD_CL_DIR .
  methods DELETE
    importing
      !PT_FILES type ZAPCMD_TBL_FILELIST .
  methods USER_COMMAND
    importing
      !E_UCOMM type SYUCOMM .
  methods HANDLE_ACTIVATE
    for event SET_ACTIVE of ZAPCMD_CL_FILELIST
    importing
      !SENDER .</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_COMMANDER
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_COMMANDER
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZAPCMD_CL_COMMANDER" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_ACTIVELIST" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_CL_FILELIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_CONTAINER_LEFT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_CONTAINER_RIGHT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_DIRNAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_FILESLEFT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_CL_FILELIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_FILESRIGHT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_CL_FILELIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CF_GUI_SPLITTER_CONTAINER" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_EASY_SPLITTER_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CONSTRUCTOR" SCONAME="PF_LEFT_TYPE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM" PARVALUE="&apos;FRONTEND&apos;" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CONSTRUCTOR" SCONAME="PF_LEFT_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CONSTRUCTOR" SCONAME="PF_RIGHT_TYPE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM" PARVALUE="&apos;FRONTEND&apos;" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CONSTRUCTOR" SCONAME="PF_RIGHT_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="CONSTRUCTOR" SCONAME="PF_DIRNAME" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="STRING" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.

     CREATE OBJECT cf_filesleft
      EXPORTING
        pf_type = pf_left_type
        pf_dir  = pf_left_dir.
*    set handler cf_filesleft-&gt;handle_activate.
    CREATE OBJECT cf_filesright
      EXPORTING
        pf_type = pf_right_type
        pf_dir  = pf_right_dir.
*    set handler cf_filesright-&gt;handle_activate.

    cf_dirname = pf_dirname.
    set handler handle_activate for all instances.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="COPY" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="COPY" SCONAME="PT_FILES" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="COPY" SCONAME="PF_DESTDIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_CL_DIR"/>
   <source>method COPY.

     DATA lf_file TYPE REF TO ZAPCMD_cl_knot.
    DATA lf_sourcefile TYPE REF TO ZAPCMD_cl_file.
    DATA lf_destfile TYPE REF TO ZAPCMD_cl_file.
    DATA lt_file TYPE ZAPCMD_tbl_xstring.
    data lf_answer type c.
    lf_answer = &apos;1&apos;.

    LOOP AT pt_files INTO lf_file
       WHERE table_line-&gt;filetype &lt;&gt; &apos;DIR&apos;.

      lf_sourcefile ?= lf_file.
      DATA lf_string TYPE string.
      CONCATENATE &apos;COPY: &apos; lf_sourcefile-&gt;name INTO lf_string.

      CALL FUNCTION &apos;SAPGUI_PROGRESS_INDICATOR&apos;
        EXPORTING
          percentage = 0
          text       = lf_string.

      if pf_destdir-&gt;check_fileexist( lf_sourcefile-&gt;name ) = abap_true.
        IF lf_answer &lt;&gt; &apos;2&apos;.

          CONCATENATE &apos;&quot;&apos; lf_sourcefile-&gt;name &apos;&quot;&apos; &apos; existiert.&apos; &apos; Überschreiben?&apos; INTO
            lf_string.

          CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
            EXPORTING
              titlebar                    = lf_sourcefile-&gt;full_name
*             DIAGNOSE_OBJECT             = &apos; &apos;
              text_question               = lf_string
              text_button_1               = &apos;Ja&apos;(001)
              icon_button_1               = &apos; &apos;
              text_button_2               = &apos;Ja, Alle&apos;(002)
              icon_button_2               = &apos; &apos;
              default_button              = &apos;1&apos;
              display_cancel_button       = &apos;X&apos;
*             USERDEFINED_F1_HELP         = &apos; &apos;
*             START_COLUMN                = 25
*             START_ROW                   = 6
*             POPUP_TYPE                  =
           IMPORTING
              answer                      = lf_answer
*           TABLES
*             PARAMETER                   =
             EXCEPTIONS
               text_not_found              = 1
               OTHERS                      = 2
                    .
          IF sy-subrc &lt;&gt; 0.
            MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          ENDIF.
          if lf_answer = &apos;A&apos;.
**          Abbruch.
            return.
          endif.

        ENDIF.


      endif.

      CALL METHOD pf_destdir-&gt;create_file
        EXPORTING
          pf_filename = lf_sourcefile-&gt;name
        IMPORTING
          pf_file     = lf_destfile.

      DATA lf_filesize TYPE i.

      CALL METHOD lf_sourcefile-&gt;read_bin
        IMPORTING
          pt_file     = lt_file
          pf_filesize = lf_filesize.

      CALL METHOD lf_destfile-&gt;write_bin
        EXPORTING
          pt_file     = lt_file
          pf_filesize = lf_filesize.


    ENDLOOP.
    LOOP AT pt_files INTO lf_file
      WHERE table_line-&gt;filetype = &apos;DIR&apos;
      AND   table_line-&gt;name &lt;&gt; &apos;..&apos;.

*          message lf_file-&gt;name type &apos;S&apos;.
      DATA lf_destdir TYPE REF TO ZAPCMD_cl_dir.

      CALL METHOD pf_destdir-&gt;create_dir
        EXPORTING
          pf_filename = lf_file-&gt;name
        IMPORTING
          pf_file     = lf_destdir.

      DATA lf_files TYPE ZAPCMD_tbl_filelist.
      DATA lf_dir TYPE REF TO ZAPCMD_cl_dir.
      lf_dir ?= lf_file.
      CALL METHOD lf_dir-&gt;read_dir
        IMPORTING
          pt_filelist       = lf_files
        EXCEPTIONS
          permission_denied = 1.
      IF sy-subrc &lt;&gt; 0.
        MESSAGE ID sy-msgid TYPE &apos;I&apos; NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ELSE.
        CALL METHOD copy
          EXPORTING
            pt_files   = lf_files
            pf_destdir = lf_destdir.
      ENDIF.


    ENDLOOP.


endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="DELETE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="DELETE" SCONAME="PT_FILES" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZAPCMD_TBL_FILELIST"/>
   <source>method DELETE.

    DATA lf_file TYPE REF TO ZAPCMD_cl_knot.
    DATA lf_answer TYPE c.

    LOOP AT pt_files INTO lf_file.

      IF lf_file-&gt;name &lt;&gt; &apos;..&apos;.

        IF lf_answer &lt;&gt; &apos;2&apos;.

          DATA lf_string TYPE string.
          CONCATENATE &apos;&quot;&apos; lf_file-&gt;name &apos;&quot;&apos; &apos; löschen?&apos; INTO
            lf_string.

          CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
            EXPORTING
              titlebar                    = lf_file-&gt;full_name
*             DIAGNOSE_OBJECT             = &apos; &apos;
              text_question               = lf_string
              text_button_1               = &apos;Ja&apos;(001)
              icon_button_1               = &apos; &apos;
              text_button_2               = &apos;Ja, Alle&apos;(002)
              icon_button_2               = &apos; &apos;
              default_button              = &apos;1&apos;
              display_cancel_button       = &apos;X&apos;
*             USERDEFINED_F1_HELP         = &apos; &apos;
*             START_COLUMN                = 25
*             START_ROW                   = 6
*             POPUP_TYPE                  =
           IMPORTING
              answer                      = lf_answer
*           TABLES
*             PARAMETER                   =
             EXCEPTIONS
               text_not_found              = 1
               OTHERS                      = 2
                    .
          IF sy-subrc &lt;&gt; 0.
            MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          ENDIF.

        ENDIF.

        IF lf_answer = &apos;1&apos; OR lf_answer = &apos;2&apos;.
          IF lf_file-&gt;filetype = &apos;DIR&apos;.
            DATA lf_files TYPE ZAPCMD_tbl_filelist.
            DATA lf_dir TYPE REF TO ZAPCMD_cl_dir.
            lf_dir ?= lf_file.
            CALL METHOD lf_dir-&gt;read_dir
              IMPORTING
                pt_filelist       = lf_files
              EXCEPTIONS
                permission_denied = 1.
            IF sy-subrc &lt;&gt; 0.
              MESSAGE ID sy-msgid TYPE &apos;I&apos; NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
              EXIT.
            ENDIF.
            CALL METHOD delete
              EXPORTING
                pt_files = lf_files.

          ENDIF.
          CALL METHOD lf_file-&gt;delete.
        ELSEIF lf_answer = &apos;A&apos;.
          EXIT.
        ENDIF.
      ENDIF.
    ENDLOOP.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="HANDLE_ACTIVATE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZAPCMD_CL_FILELIST" REFCMPNAME="SET_ACTIVE" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="HANDLE_ACTIVATE" SCONAME="SENDER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>method HANDLE_ACTIVATE.

    cf_activelist = sender.
    field-symbols &lt;dirname&gt; type string.
    assign cf_dirname-&gt;* to &lt;dirname&gt;.
    &lt;dirname&gt; = cf_activelist-&gt;cf_ref_dir-&gt;full_name.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="SHOW" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="SHOW" SCONAME="PF_CONTAINER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER"/>
   <source>method SHOW.

    IF cf_gui_splitter_container IS INITIAL.
      CREATE OBJECT cf_gui_splitter_container
        EXPORTING
          parent      = pf_container
          orientation = cf_gui_splitter_container-&gt;orientation_horizontal.
* get the containers of the splitter control
      cf_container_left =
        cf_gui_splitter_container-&gt;top_left_container.
      cf_container_right =
          cf_gui_splitter_container-&gt;bottom_right_container.


    ENDIF.

    CALL METHOD cf_filesleft-&gt;show
      EXPORTING
        pf_container = cf_container_left.
    CALL METHOD cf_filesright-&gt;show
      EXPORTING
        pf_container = cf_container_right.

    if cf_filesleft-&gt;cf_active = abap_true.
      cf_activelist = cf_filesleft.
    else.
      cf_activelist = cf_filesright.
    endif.
    field-symbols &lt;dirname&gt; type string.
    assign cf_dirname-&gt;* to &lt;dirname&gt;.
    &lt;dirname&gt; = cf_activelist-&gt;cf_ref_dir-&gt;full_name.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="USER_COMMAND" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_COMMANDER" CMPNAME="USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071009" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM"/>
   <source>method USER_COMMAND.

     DATA lf_gui_comp TYPE REF TO cl_gui_control.

    CALL METHOD cl_gui_control=&gt;get_focus
      IMPORTING
        control           = lf_gui_comp
      EXCEPTIONS
        cntl_error        = 1
        cntl_system_error = 2
        OTHERS            = 3.
    IF sy-subrc &lt;&gt; 0.
*      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CALL METHOD cf_filesleft-&gt;check_active
      EXPORTING
        pf_control = lf_gui_comp.

    CALL METHOD cf_filesright-&gt;check_active
      EXPORTING
        pf_control = lf_gui_comp.

    IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
      cf_activelist = cf_filesleft.
    ELSE.
      cf_activelist = cf_filesright.
    ENDIF.
    field-symbols &lt;dirname&gt; type string.
    assign cf_dirname-&gt;* to &lt;dirname&gt;.
    &lt;dirname&gt; = cf_activelist-&gt;cf_ref_dir-&gt;full_name.

*    data lt_file type ZAPCMD_TBL_XSTRING.
    DATA lf_filetype TYPE char10.
    DATA lt_files TYPE ZAPCMD_tbl_filelist.
    DATA lf_file TYPE REF TO ZAPCMD_cl_knot.
    DATA lf_editorfile TYPE REF TO ZAPCMD_cl_file.
*    data lf_destfile type ref to ZAPCMD_CL_FILE.
    DATA lf_destdir TYPE REF TO ZAPCMD_cl_dir.

    DATA lf_answer TYPE c.

        IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
          lt_files = cf_filesleft-&gt;get_files( ).
          lf_destdir = cf_filesright-&gt;get_dir( ).
        ELSE.
          lt_files = cf_filesright-&gt;get_files( ).
          lf_destdir = cf_filesleft-&gt;get_dir( ).
        ENDIF.

    CASE e_ucomm.

      WHEN &apos;COPY&apos;.



        CALL METHOD copy
          EXPORTING
            pt_files   = lt_files
            pf_destdir = lf_destdir.

        IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
          CALL METHOD cf_filesright-&gt;reload_dir.
          CALL METHOD cf_filesright-&gt;refresh.
        ELSE.
          CALL METHOD cf_filesleft-&gt;reload_dir.
          CALL METHOD cf_filesleft-&gt;refresh.
        ENDIF.

      WHEN &apos;DEL&apos;.




        CALL METHOD delete
          EXPORTING
            pt_files = lt_files.

        IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
          CALL METHOD cf_filesleft-&gt;reload_dir.
          CALL METHOD cf_filesleft-&gt;refresh.
        ELSE.
          CALL METHOD cf_filesright-&gt;reload_dir.
          CALL METHOD cf_filesright-&gt;refresh.
        ENDIF.

      WHEN &apos;MOVE&apos;.



        CALL METHOD copy
          EXPORTING
            pt_files   = lt_files
            pf_destdir = lf_destdir.

        CALL METHOD delete
          EXPORTING
            pt_files = lt_files.


        CALL METHOD cf_filesleft-&gt;reload_dir.
        CALL METHOD cf_filesleft-&gt;refresh.

        CALL METHOD cf_filesright-&gt;reload_dir.
        CALL METHOD cf_filesright-&gt;refresh.

      WHEN &apos;NEWDIR&apos;.

        IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
          lf_destdir = cf_filesleft-&gt;get_dir( ).

        ELSE.
          lf_destdir = cf_filesright-&gt;get_dir( ).


        ENDIF.

        DATA lf_dirname TYPE filename-fileextern.
        DATA lf_string TYPE string.


        CALL FUNCTION &apos;POPUP_TO_GET_VALUE&apos;
          EXPORTING
            fieldname           = &apos;FILEEXTERN&apos;
            tabname             = &apos;FILENAME&apos;
            titel               = &apos;Neues Verzeichnis anlegen:&apos;
            valuein             = &apos;&apos;
          IMPORTING
            answer              = lf_answer
            valueout            = lf_dirname
          EXCEPTIONS
            fieldname_not_found = 1
            OTHERS              = 2.
        IF sy-subrc &lt;&gt; 0.
          MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        ENDIF.

        IF lf_answer &lt;&gt; &apos;A&apos;.

          lf_string = lf_dirname.

          CALL METHOD lf_destdir-&gt;create_dir
            EXPORTING
              pf_filename = lf_string.
        ENDIF.

        IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
          CALL METHOD cf_filesleft-&gt;reload_dir.
          CALL METHOD cf_filesleft-&gt;refresh.
        ELSE.
          CALL METHOD cf_filesright-&gt;reload_dir.
          CALL METHOD cf_filesright-&gt;refresh.
        ENDIF.

      WHEN &apos;SHOW&apos;.

        READ TABLE lt_files INDEX 1
          INTO lf_file.

        lf_editorfile ?= lf_file.

        zapcmd_cl_editor=&gt;call_editor(
          pf_file = lf_editorfile
          pf_readonly = &apos;X&apos;
          ).

*        CALL METHOD gf_editor-&gt;set_file
*          EXPORTING
*            pf_file = lf_editorfile.
*
*        CALL METHOD gf_editor-&gt;set_readonly
*          EXPORTING
*            pf_readonly = &apos;X&apos;.
*
*        CALL SCREEN 200.
*
*        CALL METHOD gf_editor-&gt;free.


      WHEN &apos;EDIT&apos;.

        READ TABLE lt_files INDEX 1
          INTO lf_file.

        lf_editorfile ?= lf_file.

        zapcmd_cl_editor=&gt;call_editor(
          pf_file = lf_editorfile
          pf_readonly = &apos;&apos;
          ).

*        CALL METHOD gf_editor-&gt;set_file
*          EXPORTING
*            pf_file = lf_editorfile.
*
*        CALL METHOD gf_editor-&gt;set_readonly
*          EXPORTING
*            pf_readonly = &apos;&apos;.
*
*
*        CALL SCREEN 200.
*
*        CALL METHOD gf_editor-&gt;free.

      when &apos;BACK&apos;.

        IF cf_filesleft-&gt;cf_active = &apos;X&apos;.
          CALL METHOD cf_filesleft-&gt;undo.

        ELSE.
          CALL METHOD cf_filesright-&gt;undo.

        ENDIF.


      WHEN &apos;EXIT&apos;.
        DATA lf_id TYPE indx_srtfd.
        CONCATENATE &apos;ZAPCMD&apos; sy-uname INTO lf_id.
        DATA lf_dir TYPE REF TO ZAPCMD_cl_dir.
        lf_dir = cf_filesleft-&gt;get_dir( ).
        DATA l_left TYPE ZAPCMD_t_dir.

        IF lf_dir-&gt;server_area = &apos;P&apos;.
          l_left-type = zapcmd_cl_dir=&gt;co_frontend.
        ELSE.
          l_left-type = zapcmd_cl_dir=&gt;co_applserv.
        ENDIF.
        l_left-dir = lf_dir-&gt;full_name.

        lf_dir = cf_filesright-&gt;get_dir( ).

        DATA l_right TYPE ZAPCMD_t_dir.

        IF lf_dir-&gt;server_area = &apos;P&apos;.
          l_right-type = zapcmd_cl_dir=&gt;co_frontend.
        ELSE.
          l_right-type = zapcmd_cl_dir=&gt;co_applserv.
        ENDIF.
        l_right-dir = lf_dir-&gt;full_name.

        EXPORT
           left = l_left
           right = l_right
        TO DATABASE indx(zc)
        ID lf_id.
        IF sy-subrc = 0.
        ENDIF.
     when &apos;INFO&apos;.

        data lt_links TYPE STANDARD TABLE OF tline.
        CALL FUNCTION &apos;DOKU_OBJECT_SHOW&apos;
          EXPORTING
            dokclass               = &apos;TX&apos;
*           DOKLANGU               = SY-LANGU
            dokname                = &apos;ZAPCMD01&apos;
*           DOKTITLE               = &apos; &apos;
          TABLES
            links                  = lt_links
*         EXCEPTIONS
*           OBJECT_NOT_FOUND       = 1
*           SAPSCRIPT_ERROR        = 2
*           OTHERS                 = 3
                  .
        IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.



    ENDCASE.

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZAPCMD_CL_CMDLINE" VERSION="1" LANGU="D" DESCRIPT="Kommandozeile" UUID="0599F36744E5D14C9A303AA6B51428E0" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZAPCMD_CL_CMDLINE definition
  public
  final
  create public .

*&quot;* public components of class ZAPCMD_CL_CMDLINE
*&quot;* do not include other source files here!!!
public section.

   data cf_gui_textedit type ref to cl_gui_textedit.
    data cf_gui_dirname type ref to cl_gui_textedit.
    data ct_line type zapcmd_tbl_string.
    data cf_commandlinenumber type i.
    DATA cf_dirname TYPE string.
    data cf_cmdline type ref to string.
    data cf_filelist type ref to zapcmd_refref_filelist.

    methods show1
      importing
         !PF_CONTAINER type ref to CL_GUI_CONTAINER.

    methods SHOW
       importing
         !PF_CONTAINER type ref to CL_GUI_CONTAINER.

*    methods HANDLE_DOUBLECLICK
*      for event DOUBLE_CLICK of CL_GUI_ALV_GRID.

     methods HANDLE_DOUBLECLICK
      for event set_active of zapcmd_cl_filelist.

    methods constructor
      importing
        pf_cmdline type ref to string
        pf_dir type ref to zapcmd_refref_filelist.

    methods execute
      importing pf_cmdline type string
                pf_filelist type ref to ZApcmd_CL_filelist.

*    methods handle_dblclick for event dblclick of cl_gui_textedit.

    methods user_command
      importing
        e_ucomm type syucomm.</publicSection>
  <protectedSection>*&quot;* protected components of class ZAPCMD_CL_CMDLINE
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZAPCMD_CL_CMDLINE
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CF_CMDLINE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CF_COMMANDLINENUMBER" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CF_DIRNAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20071015" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CF_FILELIST" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZAPCMD_REFREF_FILELIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CF_GUI_DIRNAME" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_TEXTEDIT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CF_GUI_TEXTEDIT" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_TEXTEDIT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CT_LINE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZAPCMD_TBL_STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CONSTRUCTOR" SCONAME="PF_CMDLINE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="STRING"/>
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="CONSTRUCTOR" SCONAME="PF_DIR" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_REFREF_FILELIST"/>
   <source>method CONSTRUCTOR.

    cf_cmdline = pf_cmdline.
    cf_filelist = pf_dir.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="EXECUTE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="EXECUTE" SCONAME="PF_CMDLINE" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="EXECUTE" SCONAME="PF_FILELIST" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZAPCMD_CL_FILELIST"/>
   <source>method EXECUTE.

    IF pf_cmdline IS NOT INITIAL.
      DATA ls_dir TYPE REF TO zapcmd_cl_dir.
      DATA lf_cmdline TYPE string.
      ls_dir ?= pf_filelist-&gt;get_dir( ).
      DATA lf_cd(3) TYPE c.
      IF STRLEN( pf_cmdline ) &gt; 2.
        lf_cd = pf_cmdline(3).
        CONDENSE lf_cd.
        TRANSLATE lf_cd TO UPPER CASE.
      ENDIF.
      IF lf_cd = &apos;CD&apos;.
        DATA lf_dirname TYPE string.
        lf_dirname = pf_cmdline+3.
        pf_filelist-&gt;load_dir(
          EXPORTING
           pf_dir = lf_dirname
        ).
        RETURN.
      ENDIF.
      IF ls_dir-&gt;server_area = zapcmd_cl_knot=&gt;co_area_frontend.
        DATA lf_params TYPE string.
        CONCATENATE &apos;/k&apos; pf_cmdline
          INTO lf_params SEPARATED BY space.
        CALL METHOD cl_gui_frontend_services=&gt;execute
          EXPORTING
*            DOCUMENT               = &apos;c:\WINDOWS\system32\cmd.exe&apos;
            application            = &apos;c:\WINDOWS\system32\cmd.exe&apos;
            parameter              = lf_params
            default_directory      = ls_dir-&gt;full_name
*            MAXIMIZED              =
*            MINIMIZED              =
            synchronous            = &apos;X&apos;
*            OPERATION              = &apos;OPEN&apos;
          EXCEPTIONS
            cntl_error             = 1
            error_no_gui           = 2
            bad_parameter          = 3
            file_not_found         = 4
            path_not_found         = 5
            file_extension_unknown = 6
            error_execute_failed   = 7
            synchronous_failed     = 8
            not_supported_by_gui   = 9
            OTHERS                 = 10
                .
        IF sy-subrc &lt;&gt; 0.
          MESSAGE ID sy-msgid TYPE &apos;I&apos; NUMBER sy-msgno
                     WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        ENDIF.

      ELSE.

        DATA lf_line TYPE string.

        DATA ls_filedescr TYPE zapcmd_file_descr.
*      ls_filedescr = pf_filelist-&gt;cf_ref_dir-&gt;get_info( ).
        lf_line = ls_dir-&gt;full_name.
        CONCATENATE lf_line &apos;&gt;&apos; pf_cmdline INTO lf_line.
        APPEND lf_line TO ct_line.
        cf_commandlinenumber = lines( ct_line ).
        DATA lt_output TYPE zapcmd_tbl_string.
*        concatenate &apos;cd&apos; ls_dir-&gt;full_name
*          into lf_cmdline separated by space.
*
*          zavl_cl_knot=&gt;exec_server(
*          EXPORTING
*            pf_command = lf_cmdline
*          IMPORTING
*            ptx_output = lt_output
*            ).

*      concatenate ls_dir-&gt;full_name ls_dir-&gt;separator pf_cmdline
*        into lf_cmdline.
        lf_cmdline = pf_cmdline.
        zapcmd_cl_knot=&gt;exec_server(
          EXPORTING
            pf_command = lf_cmdline
            pf_dir = ls_dir-&gt;full_name
          IMPORTING
            ptx_output = lt_output
            ).
        APPEND LINES OF lt_output TO ct_line.

*       CALL SCREEN 300 STARTING AT 10 3 ENDING AT 100 27.
        CALL FUNCTION &apos;ZAPCMD_CALL_CMDLINE&apos;
          EXPORTING
            pf_cmdline       = me
                  .

*      cf_gui_textedit-&gt;SET_TEXT_AS_R3TABLE(
*        exporting
*          table = ct_line
*        ).

      ENDIF.
    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="HANDLE_DOUBLECLICK" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" MTDTYPE="1" MTDDECLTYP="0" REFCLSNAME="ZAPCMD_CL_FILELIST" REFCMPNAME="SET_ACTIVE" BCMTDCAT="00" BCMTDSYN="0">
   <source>method HANDLE_DOUBLECLICK.
    FIELD-SYMBOLS: &lt;filelist&gt; TYPE REF TO zapcmd_cl_filelist.
    ASSIGN cf_filelist-&gt;* TO &lt;filelist&gt;.
    cf_dirname = &lt;filelist&gt;-&gt;cf_ref_dir-&gt;full_name.
    cf_gui_dirname-&gt;set_textstream(
      EXPORTING
        TEXT                   = cf_dirname
      EXCEPTIONS
        ERROR_CNTL_CALL_METHOD = 1
        NOT_SUPPORTED_BY_GUI   = 2
        others                 = 3
           ).
    IF sy-subrc &lt;&gt; 0.
     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

**    DATA ct_dirname TYPE TABLE OF string.
*    refresh ct_dirname.
*    FIELD-SYMBOLS: &lt;filelist&gt; TYPE REF TO zapcmd_cl_filelist.
*    ASSIGN cf_filelist-&gt;* TO &lt;filelist&gt;.
*    APPEND &lt;filelist&gt;-&gt;cf_ref_dir-&gt;full_name TO ct_dirname.
*    cf_gui_dirname-&gt;set_text_as_r3table(
*      EXPORTING
*        table = ct_dirname
*      ).
*    CALL METHOD cl_gui_cfw=&gt;flush.
*    IF sy-subrc NE 0.
*    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="SHOW" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="SHOW" SCONAME="PF_CONTAINER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER"/>
   <source>METHOD show.

*      importing
*        !PF_CONTAINER type ref to CL_GUI_CONTAINER .
  IF cf_gui_textedit IS INITIAL.
    CREATE OBJECT cf_gui_textedit
      EXPORTING
        style = 0
        wordwrap_mode = 0
        parent  = pf_container.
    cf_gui_textedit-&gt;set_statusbar_mode( 0 ).
    cf_gui_textedit-&gt;set_toolbar_mode( 0 ).
*      cf_gui_textedit-&gt;SET_MODE( 0 ).
*      set handler handle_dblclick for cf_gui_textedit.
    cf_gui_textedit-&gt;register_event_dblclick(
      register = 1 ).

  ENDIF.

  CALL METHOD cf_gui_textedit-&gt;set_readonly_mode
    EXPORTING
      readonly_mode = 1.

  DATA lf_stream TYPE string.
  lf_stream = zapcmd_cl_file=&gt;text2stream( ct_line ).

  cf_gui_textedit-&gt;set_textstream(
    EXPORTING
      text                   = lf_stream
    EXCEPTIONS
      error_cntl_call_method = 1
      not_supported_by_gui   = 2
      OTHERS                 = 3
         ).
  IF sy-subrc &lt;&gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


*    cf_gui_textedit-&gt;set_text_as_r3table(
*      EXPORTING
*        table = ct_line
*      ).

  IF cf_commandlinenumber IS INITIAL.
    cf_commandlinenumber = 1.
  ENDIF.

  cf_gui_textedit-&gt;go_to_line(
    EXPORTING
      line                   = cf_commandlinenumber
*      EXCEPTIONS
*        ERROR_CNTL_CALL_METHOD = 1
*        others                 = 2
         ).
  IF sy-subrc &lt;&gt; 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  cf_gui_textedit-&gt;set_first_visible_line(
    EXPORTING
      line                   = cf_commandlinenumber
*      EXCEPTIONS
*        ERROR_CNTL_CALL_METHOD = 1
*        others                 = 2
         ).
  IF sy-subrc &lt;&gt; 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="SHOW1" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="SHOW1" SCONAME="PF_CONTAINER" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER"/>
   <source>method SHOW1.

*      importing
*        !PF_CONTAINER type ref to CL_GUI_CONTAINER .
    IF cf_gui_dirname IS INITIAL.
      CREATE OBJECT cf_gui_dirname
        EXPORTING
          style = 0
          wordwrap_mode = 0
          parent  = pf_container.
      cf_gui_dirname-&gt;set_statusbar_mode( 0 ).
      cf_gui_dirname-&gt;set_toolbar_mode( 0 ).

      set handler handle_doubleclick for all instances.

    ENDIF.

    CALL METHOD cf_gui_dirname-&gt;set_readonly_mode
      EXPORTING
        readonly_mode = 1.

      FIELD-SYMBOLS: &lt;filelist&gt; TYPE REF TO zapcmd_cl_filelist.
    ASSIGN cf_filelist-&gt;* TO &lt;filelist&gt;.
    cf_dirname = &lt;filelist&gt;-&gt;cf_ref_dir-&gt;full_name.
    cf_gui_dirname-&gt;set_textstream(
      EXPORTING
        TEXT                   = cf_dirname
      EXCEPTIONS
        ERROR_CNTL_CALL_METHOD = 1
        NOT_SUPPORTED_BY_GUI   = 2
        others                 = 3
           ).
    IF sy-subrc &lt;&gt; 0.
     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

**    DATA ct_dirname TYPE TABLE OF string.
*    refresh ct_dirname.
*    FIELD-SYMBOLS: &lt;filelist&gt; TYPE REF TO zapcmd_cl_filelist.
*    ASSIGN cf_filelist-&gt;* TO &lt;filelist&gt;.
*    APPEND &lt;filelist&gt;-&gt;cf_ref_dir-&gt;full_name TO ct_dirname.
*    cf_gui_dirname-&gt;set_text_as_r3table(
*      EXPORTING
*        table = ct_dirname
*      ).
*    CALL METHOD cl_gui_cfw=&gt;flush.
*    IF sy-subrc NE 0.
*    ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="USER_COMMAND" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZAPCMD_CL_CMDLINE" CMPNAME="USER_COMMAND" SCONAME="E_UCOMM" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071009" CHANGEDBY="BCUSER" CHANGEDON="20071015" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUCOMM"/>
   <source>method USER_COMMAND.

    IF e_ucomm IS INITIAL.
      FIELD-SYMBOLS: &lt;cmdline&gt; TYPE string.
      ASSIGN cf_cmdline-&gt;* TO &lt;cmdline&gt;.
      FIELD-SYMBOLS: &lt;filelist&gt; TYPE REF TO zapcmd_cl_filelist.
      ASSIGN cf_filelist-&gt;* TO &lt;filelist&gt;.

      execute(
        pf_cmdline = &lt;cmdline&gt;
        pf_filelist = &lt;filelist&gt;
        ).

      CLEAR &lt;cmdline&gt;.

    ENDIF.

endmethod.</source>
  </method>
 </CLAS>
 <DOCT OBJNAME="ZAPCMD01" ID="TX" OBJECT="ZAPCMD01">
  <DocEntry LANGU="D" TYP="E" DOKVERSION="0002">
   <TextLines TDFORMAT="U2" TDLINE="SAP-Commander"/>
   <TextLines TDFORMAT="*" TDLINE="(c) 2007 Achim von Lowtzow"/>
   <TextLines TDFORMAT="*"/>
   <TextLines TDFORMAT="*" TDLINE="Der SAP-Commander dient dazu Dateien und Verzeichnisse zwischen"/>
   <TextLines TDLINE="Applikationsserver und Präsentationsserver (Frontend) kopieren zu"/>
   <TextLines TDLINE="können. Der Aufbau ist ähnlich dem Norton Commander für DOS."/>
   <TextLines TDFORMAT="*"/>
  </DocEntry>
  <DocEntry LANGU="E" TYP="E" DOKVERSION="0002">
   <TextLines TDFORMAT="U2" TDLINE="SAP-Commander"/>
   <TextLines TDFORMAT="*" TDLINE="(c) 2007 Achim von Lowtzow"/>
   <TextLines TDFORMAT="*"/>
   <TextLines TDFORMAT="*" TDLINE="The SAP-Commander can copy files from the frontend to the application"/>
   <TextLines TDLINE="Server."/>
  </DocEntry>
 </DOCT>
 <DOMA DOMNAME="ZAPCMD_FILENAME" DDLANGUAGE="D" DATATYPE="CHAR" LENG="000128" OUTPUTLEN="000128" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="filename" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071021" AS4TIME="125709"/>
 <DOMA DOMNAME="ZAPCMD_FULLNAME" DDLANGUAGE="D" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="Dateiname mit Pfad" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071021" AS4TIME="130208"/>
 <DOMA DOMNAME="ZAPCMD_SERVER_AREA" DDLANGUAGE="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASKLEN="0000" DDTEXT="Applikationsserver oder Präsentationsserver (Frontend)" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071008" AS4TIME="095922">
  <dd07v DOMNAME="ZAPCMD_SERVER_AREA" VALPOS="0001" DDLANGUAGE="D" DOMVALUE_L="A" DDTEXT="Applikationsserver"/>
  <dd07v DOMNAME="ZAPCMD_SERVER_AREA" VALPOS="0002" DDLANGUAGE="D" DOMVALUE_L="P" DDTEXT="Präsentationsserver"/>
 </DOMA>
 <DTEL ROLLNAME="ZAPCMD_SERVER_AREA" DDLANGUAGE="D" DOMNAME="ZAPCMD_SERVER_AREA" ROUTPUTLEN="000000" HEADLEN="54" SCRLEN1="06" SCRLEN2="20" SCRLEN3="20" DDTEXT="Applikationsserver oder Präsentationsserver (Frontend)" REPTEXT="Applikationsserver oder Präsentationsserver (Frontend)" SCRTEXT_S="Server" SCRTEXT_M="Server oder Frontend" SCRTEXT_L="Server oder Frontend" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071008" AS4TIME="095932" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZAPCMD_REFREF_FILELIST" DDLANGUAGE="D" DOMNAME="ZAPCMD_CL_FILELIST" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="Referenz auf die Refernz des Objektes Filelist" REPTEXT="Filelist" SCRTEXT_S="Filelist" SCRTEXT_M="Filelist" SCRTEXT_L="Filelist" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071009" AS4TIME="004908" DTELMASTER="D" DATATYPE="REF" LENG="000000" DECIMALS="000000" OUTPUTLEN="000000" REFKIND="R" REFTYPE="C">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZAPCMD_FULLNAME" DDLANGUAGE="D" DOMNAME="ZAPCMD_FULLNAME" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="09" SCRLEN2="18" SCRLEN3="18" DDTEXT="Dateiname mit Pfad" REPTEXT="Dateiname mit Pfad" SCRTEXT_S="Dateiname" SCRTEXT_M="Dateiname mit Pfad" SCRTEXT_L="Dateiname mit Pfad" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071021" AS4TIME="130208" DTELMASTER="D" DATATYPE="CHAR" LENG="000255" DECIMALS="000000" OUTPUTLEN="000255" LOWERCASE="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZAPCMD_FILESIZE_STR" DDLANGUAGE="D" ROUTPUTLEN="000000" HEADLEN="27" SCRLEN1="10" SCRLEN2="10" SCRLEN3="27" DDTEXT="Dateigröße als Zeichenkette" REPTEXT="Dateigröße als Zeichenkette" SCRTEXT_S="Dateigröße" SCRTEXT_M="Dateigröße" SCRTEXT_L="Dateigröße als Zeichenkette" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071008" AS4TIME="101754" DTELMASTER="D" DATATYPE="CHAR" LENG="000015" DECIMALS="000000" OUTPUTLEN="000015">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZAPCMD_FILESIZE" DDLANGUAGE="D" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="19" SCRLEN3="19" DDTEXT="Dateigröße in Bytes" REPTEXT="Dateigröße in Bytes" SCRTEXT_S="Dateigröße" SCRTEXT_M="Dateigröße in Bytes" SCRTEXT_L="Dateigröße in Bytes" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071008" AS4TIME="101754" DTELMASTER="D" DATATYPE="DEC" LENG="000014" DECIMALS="000000" OUTPUTLEN="000018">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZAPCMD_FILENAME" DDLANGUAGE="D" DOMNAME="ZAPCMD_FILENAME" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="09" SCRLEN2="19" SCRLEN3="19" DDTEXT="Dateiname ohne Pfad" REPTEXT="Dateiname ohne Pfad" SCRTEXT_S="Dateiname" SCRTEXT_M="Dateiname ohne Pfad" SCRTEXT_L="Dateiname ohne Pfad" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071021" AS4TIME="125709" DTELMASTER="D" DATATYPE="CHAR" LENG="000128" DECIMALS="000000" OUTPUTLEN="000128" LOWERCASE="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZAPCMD_FILEEXT" DDLANGUAGE="D" DOMNAME="ZAPCMD_FILENAME" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="09" SCRLEN2="16" SCRLEN3="21" DDTEXT="Dateinamenerweiterung" REPTEXT="Dateinamenerweiterung" SCRTEXT_S="Dateierw." SCRTEXT_M="Dateierweiterung" SCRTEXT_L="Dateinamenerweiterung" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071021" AS4TIME="125935" DTELMASTER="D" DATATYPE="CHAR" LENG="000128" DECIMALS="000000" OUTPUTLEN="000128" LOWERCASE="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <FUGR SPRAS="D" AREA="ZAPCMD_FG_CMDLINE" AREAT="Dynpro für eine Commandozeile">
  <mainprogram NAME="SAPLZAPCMD_FG_CMDLINE" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" CNAM="BCUSER" CDAT="20071014" UNAM="BCUSER" UDAT="20071014" VERN="000002" RMAND="000" RLOAD="D" FIXPT="X" SDATE="20071113" STIME="112741" IDATE="20071014" ITIME="105633" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZAPCMD_FG_CMDLINE" DNUM="0300" TYPE="M" FNUM="0300" BZMX="25 " BZBR="91 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="26 " NOCO="91 " VALP="0 " CUAN="G" SPRA="D" DGEN="20071014" TGEN="105825" DTEXT="Anzeige Commandfenster">
     <dynprofield FNAM="CUST300" DIDX="0019" FLG1="00" FLG2="00" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="5B" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="01" ADEZ="01"/>
     <dynprofield FNAM="GF_OK_CODE" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE STATUS_0300.
*
PROCESS AFTER INPUT.
  MODULE USER_COMMAND_0300.</dynproflowsource>
    </dynpro>
   </dynpros>
   <pfstatus>
    <pfstatus_sta CODE="STATUS300" MODAL="P" PFKCODE="000001" BUTCODE="0001" INT_NOTE="Status300"/>
    <pfstatus_fun CODE="ABORT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Abbrechen"/>
    <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Zurück"/>
    <pfstatus_fun CODE="COPY" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Kopieren"/>
    <pfstatus_fun CODE="DEL" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Löschen"/>
    <pfstatus_fun CODE="EXIT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Beenden"/>
    <pfstatus_fun CODE="MOVE" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Verschieben"/>
    <pfstatus_fun CODE="NEWDIR" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Neuer Ordner"/>
    <pfstatus_fun CODE="OK" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_OKAY" ICON_ID="@0V@" FUN_TEXT="OKAY"/>
    <pfstatus_but PFK_CODE="000001" CODE="0001" NO="01" PFNO="00"/>
    <pfstatus_pfk CODE="000001" PFNO="00" FUNCODE="OK" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="05" FUNCODE="COPY" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="06" FUNCODE="MOVE" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="07" FUNCODE="NEWDIR" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="08" FUNCODE="DEL" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="12" FUNCODE="ABORT" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="15" FUNCODE="EXIT" FUNNO="001"/>
    <pfstatus_set STATUS="STATUS300" FUNCTION="OK"/>
    <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000001" MODAL="P" INT_NOTE="Status300"/>
    <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000001" SUB_CODE="0001" MODAL="P" INT_NOTE="Status300"/>
   </pfstatus>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZAPCMD_FG_CMDLINETOP.             &quot; Global Data
  INCLUDE LZAPCMD_FG_CMDLINEUXX.             &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZAPCMD_FG_CMDLINEF...             &quot; Subprograms
* INCLUDE LZAPCMD_FG_CMDLINEO...             &quot; PBO-Modules
* INCLUDE LZAPCMD_FG_CMDLINEI...             &quot; PAI-Modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZAPCMD_FG_CMDLINETOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" CNAM="BCUSER" CDAT="20071014" UNAM="BCUSER" UDAT="20071014" VERN="000004" RMAND="000" FIXPT="X" SDATE="20071014" STIME="111149" IDATE="20071014" ITIME="111149" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ZAPCMD_FG_CMDLINE.            &quot;MESSAGE-ID ..

 DATA gf_gui_cmdline_container type ref to cl_gui_custom_container.
  data gf_cmdline type ref to zapcmd_cl_cmdline.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0300  OUTPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
module STATUS_0300 output.
*  SET PF-STATUS &apos;xxxxxxxx&apos;.
*  SET TITLEBAR &apos;xxx&apos;.
  SET PF-STATUS &apos;STATUS300&apos;.
*  SET TITLEBAR &apos;xxx&apos;.
  IF gf_gui_cmdline_container IS INITIAL.
    create object gf_gui_cmdline_container
      exporting
        container_name = &apos;CUST300&apos;
        repid = sy-repid
        dynnr = &apos;0300&apos;.
  ENDIF.

  CALL METHOD gf_cmdline-&gt;show
    EXPORTING
      pf_container = gf_gui_cmdline_container.
endmodule.                 &quot; STATUS_0300  OUTPUT
*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0300  INPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
module USER_COMMAND_0300 input.

    leave to screen 0.

endmodule.                 &quot; USER_COMMAND_0300  INPUT</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="ZAPCMD_CALL_CMDLINE" STEXT="Ruft die Ausgabe für eine Commandozeile auf">
    <importing PARAMETER="PF_CMDLINE" REFERENCE="X" TYP="REF TO ZAPCMD_CL_CMDLINE" REF_CLASS="X"/>
    <documentation PARAMETER="PF_CMDLINE" KIND="P" STEXT="Kommandozeile" INDEX=" 001"/>
    <fm_source>gf_cmdline = pf_cmdline.

  CALL SCREEN 300 STARTING AT 10 3 ENDING AT 100 27.</fm_source>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR SPRAS="D" AREA="ZAPCMD_FG_EDITOR" AREAT="Dynpro für einen einfachen Editor">
  <mainprogram NAME="SAPLZAPCMD_FG_EDITOR" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" CNAM="BCUSER" CDAT="20071014" UNAM="BCUSER" UDAT="20071014" VERN="000002" RMAND="000" RLOAD="D" FIXPT="X" SDATE="20071113" STIME="112741" IDATE="20071014" ITIME="105743" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZAPCMD_FG_EDITOR" DNUM="0200" FNUM="0200" BZMX="0 " BZBR="0 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="200 " NOCO="240 " VALP="0 " CUAN="G" SPRA="D" DGEN="20071014" TGEN="110118" DTEXT="">
     <dynprofield FNAM="OK_CODE200" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE STATUS_0200.
*
PROCESS AFTER INPUT.
  MODULE USER_COMMAND_0200.</dynproflowsource>
    </dynpro>
   </dynpros>
   <pfstatus>
    <pfstatus_sta CODE="STATUS200" MODAL="D" ACTCODE="000001" PFKCODE="000001" BUTCODE="0001" INT_NOTE="Status200"/>
    <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Zurück"/>
    <pfstatus_fun CODE="EXIT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Abbrechen"/>
    <pfstatus_fun CODE="SAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SYSTEM_SAVE" ICON_ID="@2L@" FUN_TEXT="Sichern"/>
    <pfstatus_pfk CODE="000001" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="11" FUNCODE="SAVE" FUNNO="001"/>
    <pfstatus_pfk CODE="000001" PFNO="12" FUNCODE="EXIT" FUNNO="001"/>
    <pfstatus_set STATUS="STATUS200" FUNCTION="BACK"/>
    <pfstatus_set STATUS="STATUS200" FUNCTION="EXIT"/>
    <pfstatus_set STATUS="STATUS200" FUNCTION="SAVE"/>
    <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000001" MODAL="D" INT_NOTE="Status200"/>
    <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000001" MODAL="D" INT_NOTE="Status200"/>
    <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000001" SUB_CODE="0001" MODAL="D" INT_NOTE="Status200"/>
    <pfstatus_tit CODE="TITLE200" TEXT="SAP-Commander-Editor &amp;1 &amp;2 &amp;3 &amp;4"/>
   </pfstatus>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZAPCMD_FG_EDITORTOP.              &quot; Global Data
  INCLUDE LZAPCMD_FG_EDITORUXX.              &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZAPCMD_FG_EDITORF...              &quot; Subprograms
* INCLUDE LZAPCMD_FG_EDITORO...              &quot; PBO-Modules
* INCLUDE LZAPCMD_FG_EDITORI...              &quot; PAI-Modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZAPCMD_FG_EDITORTOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" CNAM="BCUSER" CDAT="20071014" UNAM="BCUSER" UDAT="20071014" VERN="000004" RMAND="000" FIXPT="X" SDATE="20071014" STIME="110928" IDATE="20071014" ITIME="110928" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ZAPCMD_FG_EDITOR.             &quot;MESSAGE-ID ..

  DATA gf_gui_editor_container TYPE REF TO cl_gui_docking_container.
  DATA gf_editor TYPE REF TO zapcmd_cl_editor.
  DATA ok_code200 LIKE sy-ucomm.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0200  OUTPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
module STATUS_0200 output.

*  SET PF-STATUS &apos;xxxxxxxx&apos;.
*  SET TITLEBAR &apos;xxx&apos;.
  SET PF-STATUS &apos;STATUS200&apos;.
*  SET TITLEBAR &apos;TITLE200&apos;.

  DATA lf_title1(200) TYPE c.
  DATA lf_title2(200) TYPE c.
  DATA lf_title3(200) TYPE c.
  DATA lf_title4(200) TYPE c.
  CALL METHOD gf_editor-&gt;get_title
    IMPORTING
      pf_title1 = lf_title1
      pf_title2 = lf_title2
      pf_title3 = lf_title3
      pf_title4 = lf_title4.

  SET TITLEBAR &apos;TITLE200&apos; WITH lf_title1 lf_title2 lf_title3 lf_title4.

  IF gf_gui_editor_container IS INITIAL.
    CREATE OBJECT gf_gui_editor_container
      EXPORTING
*        ratio = 100
        extension = 2000
        .
*           EXPORTING CONTAINER_NAME = &apos;CTRL2&apos;.

*    data lf_height type i.
*    lf_height = ( gs_factors-screen-y - 0 ) / 1.
*    data lf_width type i.
*    lf_width = ( gs_factors-screen-x - 0 ) / 1.
*
*    CALL METHOD gf_gui_editor_container-&gt;SET_HEIGHT
*      EXPORTING
*        HEIGHT     = lf_height
*            .
*    CALL METHOD gf_gui_editor_container-&gt;SET_WIDTH
*      EXPORTING
*        WIDTH     = lf_WIDTH
*            .

  ENDIF.

  CALL METHOD gf_editor-&gt;show
    EXPORTING
      pf_container = gf_gui_editor_container.

endmodule.                 &quot; STATUS_0200  OUTPUT
*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0200  INPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
module USER_COMMAND_0200 input.

*   to react on oi_custom_events:
  CALL METHOD cl_gui_cfw=&gt;dispatch.
  CALL METHOD gf_editor-&gt;user_command
    CHANGING
      e_ucomm = ok_code200.
  CASE ok_code200.
    WHEN &apos;BACK&apos;.
      LEAVE TO SCREEN 0.
    WHEN &apos;EXIT&apos;.
      LEAVE PROGRAM.
  ENDCASE.
  CLEAR ok_code200.

endmodule.                 &quot; USER_COMMAND_0200  INPUT</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="ZAPCMD_CALL_EDITOR" STEXT="Aufruf eines einfachen editors">
    <importing PARAMETER="PF_EDITOR" REFERENCE="X" TYP="REF TO ZAPCMD_CL_EDITOR" REF_CLASS="X"/>
    <documentation PARAMETER="PF_EDITOR" KIND="P" STEXT="Einfacher Editor" INDEX=" 001"/>
    <fm_source>gf_editor = pf_editor.

  call screen 200.</fm_source>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <PROG NAME="ZAPCMD_SAPCOMMANDER" VARCL="X" SUBC="1" CNAM="BCUSER" CDAT="20071009" UNAM="BCUSER" UDAT="20071021" VERN="000015" RMAND="110" RLOAD="D" FIXPT="X" SDATE="20071113" STIME="113459" IDATE="20071021" ITIME="130419" UCCHECK="X">
  <textPool>
   <language SPRAS="D">
    <textElement ID="I" KEY="001" ENTRY="Ja" LENGTH="2 "/>
    <textElement ID="I" KEY="002" ENTRY="Ja, Alle" LENGTH="8 "/>
    <textElement ID="I" KEY="116" ENTRY="Erweiterung" LENGTH="11 "/>
    <textElement ID="I" KEY="130" ENTRY="Datei nicht gefunden." LENGTH="36 "/>
    <textElement ID="I" KEY="201" ENTRY="Refresh" LENGTH="7 "/>
    <textElement ID="I" KEY="232" ENTRY="Laufwerke" LENGTH="9 "/>
    <textElement ID="I" KEY="233" ENTRY="Laufmerke" LENGTH="9 "/>
    <textElement ID="I" KEY="300" ENTRY="Text verändert." LENGTH="15 "/>
    <textElement ID="I" KEY="301" ENTRY="Soll der Text gespeichert werden?" LENGTH="33 "/>
    <textElement ID="R" ENTRY="SAP-Commander" LENGTH="13 "/>
   </language>
  </textPool>
  <dynpros>
   <dynpro PROG="ZAPCMD_SAPCOMMANDER" DNUM="0100" FNUM="0100" BZMX="2 " BZBR="131 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="35 " NOCO="134 " VALP="0 " CUAN="G" SPRA="D" DGEN="20071021" TGEN="101557" DTEXT="Hauptfenster des SAP-Commanders">
    <dynprofield FNAM="CUST400" DIDX="0001" FLG1="00" FLG2="00" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="26" LINE="01" COLN="03" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="01" ADEZ="01"/>
    <dynprofield FNAM="G_CMDLINE" DIDX="005B" FLG1="81" FLG2="02" FLG3="88" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="2A" LANF="00" LBLK="00" LREP="00" TYPE="STRG" ITYP="C" AGLT="00" ADEZ="00" STXT="____________________________________________________________________________________________________________________________________"/>
    <dynprofield FNAM="SHOW" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0B" LINE="02" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="F3 Anzeigen" RES1="                                                                                                                                                                        SHOW"/>
    <dynprofield FNAM="EDIT" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0D" LINE="02" COLN="10" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="F4 Bearbeiten" RES1="                                                                                                                                                                        EDIT"/>
    <dynprofield FNAM="COPY" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0B" LINE="02" COLN="1F" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" AGLT="00" ADEZ="00" STXT="F5 Kopieren" RES1="                                                                                                                                                                        COPY"/>
    <dynprofield FNAM="MOVE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0A" LINE="02" COLN="2C" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="105" AGLT="00" ADEZ="00" STXT="F6 Bewegen" RES1="                                                                                                                                                                        MOVE"/>
    <dynprofield FNAM="NEWDIR" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0F" LINE="02" COLN="38" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="106" AGLT="00" ADEZ="00" STXT="7 Neuer Ordner" RES1="                                                                                                                                                                        NEWDIR"/>
    <dynprofield FNAM="DEL" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0A" LINE="02" COLN="49" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="107" AGLT="00" ADEZ="00" STXT="F8 Löschen" RES1="                                                                                                                                                                        DEL"/>
    <dynprofield FNAM="EXIT" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0B" LINE="02" COLN="55" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="108" AGLT="00" ADEZ="00" STXT="F10 Beenden" RES1="                                                                                                                                                                        EXIT"/>
    <dynprofield FNAM="OK_CODE100" DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE STATUS_0100.
*
PROCESS AFTER INPUT.
  MODULE USER_COMMAND_0100.</dynproflowsource>
   </dynpro>
  </dynpros>
  <pfstatus>
   <pfstatus_sta CODE="STATUS100" MODAL="D" ACTCODE="000001" PFKCODE="000001" BUTCODE="0001" INT_NOTE="Hauptstatus"/>
   <pfstatus_fun CODE="ABORT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Abbrechen"/>
   <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Zurück"/>
   <pfstatus_fun CODE="COPY" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Kopieren"/>
   <pfstatus_fun CODE="DEL" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Löschen"/>
   <pfstatus_fun CODE="EXIT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Abbrechen"/>
   <pfstatus_fun CODE="EXIT" TEXTNO="002" TEXT_TYPE="S" FUN_TEXT="Beenden"/>
   <pfstatus_fun CODE="INFO" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_INFORMATION" ICON_ID="@0S@" FUN_TEXT="Hilfe" INFO_TEXT="Hilfe und Information"/>
   <pfstatus_fun CODE="MOVE" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Verschieben"/>
   <pfstatus_fun CODE="NEWDIR" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Neuer Ordner"/>
   <pfstatus_fun CODE="OK" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_OKAY" ICON_ID="@0V@" FUN_TEXT="OKAY"/>
   <pfstatus_fun CODE="SAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SYSTEM_SAVE" ICON_ID="@2L@" FUN_TEXT="Sichern"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="01" PFNO="00"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="02" PFNO="13"/>
   <pfstatus_pfk CODE="000001" PFNO="00" FUNCODE="OK" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="05" FUNCODE="COPY" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="06" FUNCODE="MOVE" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="07" FUNCODE="NEWDIR" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="08" FUNCODE="DEL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="12" FUNCODE="ABORT" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="13" FUNCODE="INFO" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="15" FUNCODE="EXIT" FUNNO="002"/>
   <pfstatus_pfk CODE="000002" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
   <pfstatus_pfk CODE="000002" PFNO="11" FUNCODE="SAVE" FUNNO="001"/>
   <pfstatus_pfk CODE="000002" PFNO="12" FUNCODE="EXIT" FUNNO="001"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="ABORT"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="BACK"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="COPY"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="DEL"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="INFO"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="MOVE"/>
   <pfstatus_set STATUS="STATUS100" FUNCTION="NEWDIR"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000001" MODAL="D" INT_NOTE="Hauptstatus"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000001" MODAL="P" INT_NOTE="Status300"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000001" SUB_CODE="0001" MODAL="P" INT_NOTE="Status300"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000002" MODAL="D" INT_NOTE="Status200"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000002" MODAL="D" INT_NOTE="Status200"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000002" SUB_CODE="0001" MODAL="D" INT_NOTE="Status200"/>
   <pfstatus_tit CODE="TITLE100" TEXT="SAP-Commander &amp;1 &amp;2 &amp;3 &amp;4"/>
  </pfstatus>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZAPCMD_SAPCOMMANDER                                           *
*&amp;                                                                     *
*&amp;---------------------------------------------------------------------*
*&amp;                                                                     *
*&amp;                                                                     *
*&amp;---------------------------------------------------------------------*

REPORT  zapcmd_sapcommander.

PARAMETER p_ltype TYPE syucomm DEFAULT zapcmd_cl_dir=&gt;co_default NO-DISPLAY.
PARAMETER p_ldir TYPE string DEFAULT space NO-DISPLAY.
PARAMETER p_rtype TYPE syucomm DEFAULT zapcmd_cl_dir=&gt;co_default NO-DISPLAY.
PARAMETER p_rdir TYPE string DEFAULT space NO-DISPLAY.


START-OF-SELECTION.
  DATA lf_id TYPE indx_srtfd.
  CONCATENATE &apos;ZAPCMD&apos; sy-uname INTO lf_id.
  IF p_ltype = zapcmd_cl_dir=&gt;co_default OR p_rtype = zapcmd_cl_dir=&gt;co_default.
    DATA l_left TYPE zapcmd_t_dir.
    DATA l_right TYPE zapcmd_t_dir.
    IMPORT left = l_left
    right = l_right
    FROM DATABASE indx(zc)
    ID lf_id.
    IF sy-subrc = 0.
      IF p_ltype = zapcmd_cl_dir=&gt;co_default.

        p_ltype = l_left-type.
        p_ldir  = l_left-dir.
      ENDIF.
      IF p_rtype = zapcmd_cl_dir=&gt;co_default.

        p_rtype = l_right-type.
        p_rdir  = l_right-dir.

      ENDIF.
    ENDIF.
  ENDIF.



  DATA ok_code100 LIKE sy-ucomm.
*data gf_gui_parent_container type ref to CL_GUI_CUSTOM_CONTAINER.
*  Data gf_gui_main_container type ref to cl_gui_docking_container.
  DATA gf_gui_commander_container TYPE REF TO cl_gui_docking_container.
*  DATA gf_gui_cmdline_container type ref to cl_gui_custom_container.
  DATA gf_gui_dirname_container TYPE REF TO cl_gui_custom_container.

  DATA gf_commander TYPE REF TO zapcmd_cl_commander.
  DATA gf_cmdline TYPE REF TO zapcmd_cl_cmdline.


  DATA g_cmdline TYPE string.
  DATA g_dirname TYPE string.






  DATA lf_temp TYPE REF TO string.

  DATA lf_dirname TYPE REF TO string.
  GET REFERENCE OF g_cmdline INTO lf_temp.
  GET REFERENCE OF g_dirname INTO lf_dirname.

  CREATE OBJECT gf_commander
      EXPORTING
        pf_left_type  = p_ltype
        pf_left_dir   = p_ldir
        pf_right_type = p_rtype
        pf_right_dir  = p_rdir
        pf_dirname    = lf_dirname.

  DATA lf_activelist TYPE REF TO zapcmd_refref_filelist.
  GET REFERENCE OF gf_commander-&gt;cf_activelist INTO lf_activelist.


  CREATE OBJECT gf_cmdline
    EXPORTING
      pf_cmdline = lf_temp
      pf_dir = lf_activelist.


  CALL SCREEN 100.


*type-pools: cntl.
*data gs_factors type cntl_metric_factors.
*
*CALL METHOD CL_GUI_CFW=&gt;GET_METRIC_FACTORS
*  RECEIVING
*    METRIC_FACTORS = gs_factors
*    .
**if gs_factors-screen-y &gt; 768.
**  call screen 110.
**else.
**  call screen 100.
**endif.
*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0100  OUTPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS &apos;STATUS100&apos;.
  SET TITLEBAR &apos;TITLE100&apos;.

*  IF gf_gui_parent_container IS INITIAL.
*    CREATE OBJECT gf_gui_parent_container
*           EXPORTING CONTAINER_NAME = &apos;CTRL1&apos;.
*  endif.
*
*  call method gf_commander-&gt;show
*    EXPORTING
*      pf_container = gf_gui_parent_container.

  IF gf_gui_commander_container IS INITIAL.

    CREATE OBJECT gf_gui_commander_container
      EXPORTING
        side  = cl_gui_docking_container=&gt;dock_at_top
        ratio = 90.&quot;88.

  ENDIF.

  CALL METHOD gf_commander-&gt;show
    EXPORTING
      pf_container = gf_gui_commander_container.

  DATA gs_dir TYPE REF TO zapcmd_cl_dir.
  gs_dir ?= gf_commander-&gt;cf_activelist-&gt;get_dir( ).
  g_dirname = gs_dir-&gt;full_name.

  IF gf_gui_dirname_container IS INITIAL.
    CREATE OBJECT gf_gui_dirname_container
      EXPORTING
        container_name = &apos;CUST400&apos;
        repid = sy-repid
        dynnr = &apos;0100&apos;.
  ENDIF.

  CALL METHOD gf_cmdline-&gt;show1
    EXPORTING
      pf_container = gf_gui_dirname_container.



ENDMODULE.                 &quot; STATUS_0100  OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0100  INPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

*   to react on oi_custom_events:
  CALL METHOD cl_gui_cfw=&gt;dispatch.
  CALL METHOD gf_commander-&gt;user_command
    EXPORTING
      e_ucomm = ok_code100.
  CALL METHOD gf_cmdline-&gt;user_command
    EXPORTING
      e_ucomm = ok_code100.

  CASE ok_code100.
    WHEN &apos;EXIT&apos;.
      LEAVE TO SCREEN 0.
    WHEN &apos;ABORT&apos;.
      LEAVE PROGRAM.
  ENDCASE.
  CLEAR ok_code100.


ENDMODULE.                 &quot; USER_COMMAND_0100  INPUT</source>
 </PROG>
 <TABL TABNAME="ZAPCMD_T_DIR" DDLANGUAGE="D" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="struktur für übergabe an sapcommander" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071021" AS4TIME="130208" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd03p TABNAME="ZAPCMD_T_DIR" FIELDNAME="TYPE" DDLANGUAGE="D" POSITION="0001" ROLLNAME="SYUCOMM" ADMINFIELD="0" INTTYPE="C" INTLEN="000070" DOMNAME="SYCHAR70" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="30" DTELMASTER="D" DATATYPE="CHAR" LENG="000070" OUTPUTLEN="000070" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Funktionscode, der PAI ausgelöst hat" REPTEXT="aktueller Funktionscode" SCRTEXT_S="Fcode" SCRTEXT_M="Funktionscode" SCRTEXT_L="aktueller Funktionscode" DOMNAME3L="SYCHAR70" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_T_DIR" FIELDNAME="DIR" DDLANGUAGE="D" POSITION="0002" ROLLNAME="ZAPCMD_FULLNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000255" DOMNAME="ZAPCMD_FULLNAME" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="09" SCRLEN2="18" SCRLEN3="18" DTELMASTER="D" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Dateiname mit Pfad" REPTEXT="Dateiname mit Pfad" SCRTEXT_S="Dateiname" SCRTEXT_M="Dateiname mit Pfad" SCRTEXT_L="Dateiname mit Pfad" DOMNAME3L="ZAPCMD_FULLNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TABL TABNAME="ZAPCMD_FILE_DESCR" DDLANGUAGE="D" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Struktur zur Beschreibung einer Datei" AUTHCLASS="00" AS4USER="BCUSER" AS4DATE="20071113" AS4TIME="112734" PROZPUFF="000" EXCLASS="4">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="NAME" DDLANGUAGE="D" POSITION="0001" ROLLNAME="ZAPCMD_FILENAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000128" DOMNAME="ZAPCMD_FILENAME" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="09" SCRLEN2="19" SCRLEN3="19" DTELMASTER="D" DATATYPE="CHAR" LENG="000128" OUTPUTLEN="000128" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Dateiname ohne Pfad" REPTEXT="Dateiname ohne Pfad" SCRTEXT_S="Dateiname" SCRTEXT_M="Dateiname ohne Pfad" SCRTEXT_L="Dateiname ohne Pfad" DOMNAME3L="ZAPCMD_FILENAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="EXTENSION" DDLANGUAGE="D" POSITION="0002" ROLLNAME="ZAPCMD_FILEEXT" ADMINFIELD="0" INTTYPE="C" INTLEN="000128" DOMNAME="ZAPCMD_FILENAME" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="09" SCRLEN2="16" SCRLEN3="21" DTELMASTER="D" DATATYPE="CHAR" LENG="000128" OUTPUTLEN="000128" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Dateinamenerweiterung" REPTEXT="Dateinamenerweiterung" SCRTEXT_S="Dateierw." SCRTEXT_M="Dateierweiterung" SCRTEXT_L="Dateinamenerweiterung" DOMNAME3L="ZAPCMD_FILENAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="SHORTNAME" DDLANGUAGE="D" POSITION="0003" ROLLNAME="ZAPCMD_FILENAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000128" DOMNAME="ZAPCMD_FILENAME" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="09" SCRLEN2="19" SCRLEN3="19" DTELMASTER="D" DATATYPE="CHAR" LENG="000128" OUTPUTLEN="000128" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Dateiname ohne Pfad" REPTEXT="Dateiname ohne Pfad" SCRTEXT_S="Dateiname" SCRTEXT_M="Dateiname ohne Pfad" SCRTEXT_L="Dateiname ohne Pfad" DOMNAME3L="ZAPCMD_FILENAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="FULL_NAME" DDLANGUAGE="D" POSITION="0004" ROLLNAME="ZAPCMD_FULLNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000255" DOMNAME="ZAPCMD_FULLNAME" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="09" SCRLEN2="18" SCRLEN3="18" DTELMASTER="D" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Dateiname mit Pfad" REPTEXT="Dateiname mit Pfad" SCRTEXT_S="Dateiname" SCRTEXT_M="Dateiname mit Pfad" SCRTEXT_L="Dateiname mit Pfad" DOMNAME3L="ZAPCMD_FULLNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="ICON" DDLANGUAGE="D" POSITION="0005" ROLLNAME="ICON_L4" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ICON" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="ICON" MASK="  CHARE" MASKLEN="0000" DDTEXT="Ikone mit Ausgabelänge 4" DOMMASTER="D" DOMNAME3L="ICON" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="FILESIZE" DDLANGUAGE="D" POSITION="0006" ROLLNAME="ZAPCMD_FILESIZE" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="19" SCRLEN3="19" DTELMASTER="D" DATATYPE="DEC" LENG="000014" OUTPUTLEN="000018" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Dateigröße in Bytes" REPTEXT="Dateigröße in Bytes" SCRTEXT_S="Dateigröße" SCRTEXT_M="Dateigröße in Bytes" SCRTEXT_L="Dateigröße in Bytes" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="SIZESTR" DDLANGUAGE="D" POSITION="0007" ROLLNAME="ZAPCMD_FILESIZE_STR" ADMINFIELD="0" INTTYPE="C" INTLEN="000015" ROUTPUTLEN="000000" HEADLEN="27" SCRLEN1="10" SCRLEN2="10" SCRLEN3="27" DTELMASTER="D" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Dateigröße als Zeichenkette" REPTEXT="Dateigröße als Zeichenkette" SCRTEXT_S="Dateigröße" SCRTEXT_M="Dateigröße" SCRTEXT_L="Dateigröße als Zeichenkette" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="MODDATE" DDLANGUAGE="D" POSITION="0008" ROLLNAME="DATS" ADMINFIELD="0" INTTYPE="D" INTLEN="000008" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="10" SCRLEN3="40" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="Feld vom Typ DATS" REPTEXT="Datum im Format JJJJMMDD" SCRTEXT_S="Datum" SCRTEXT_M="Datum" SCRTEXT_L="Datum im Format JJJJMMDD als Char(8)" DOMMASTER="D" DOMNAME3L="DATS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="MODTIME" DDLANGUAGE="D" POSITION="0009" ROLLNAME="TIMS" ADMINFIELD="0" INTTYPE="T" INTLEN="000006" DOMNAME="TIME" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="Feld vom Typ TIMS" DOMNAME3L="TIME" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="ATTR" DDLANGUAGE="D" POSITION="0010" ROLLNAME="CHAR10" ADMINFIELD="0" INTTYPE="C" INTLEN="000010" DOMNAME="CHAR10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Characterfeld der Länge 10" DOMNAME3L="CHAR10" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="FILETYPE" DDLANGUAGE="D" POSITION="0011" ROLLNAME="CHAR10" ADMINFIELD="0" INTTYPE="C" INTLEN="000010" DOMNAME="CHAR10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Characterfeld der Länge 10" DOMNAME3L="CHAR10" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
  <dd03p TABNAME="ZAPCMD_FILE_DESCR" FIELDNAME="INDX" DDLANGUAGE="D" POSITION="0012" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Natürliche Zahl" SCRTEXT_S="Zahl" SCRTEXT_M="Zahl" SCRTEXT_L="Natürliche Zahl" DOMNAME3L="INT4" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000"/>
 </TABL>
 <TRAN TCODE="ZAPCMD" PGMNA="ZAPCMD_SAPCOMMANDER" DYPNO="1000" CINFO="80">
  <tstct SPRSL="D" TCODE="ZAPCMD" TTEXT="SAPCommander"/>
  <tstcc TCODE="ZAPCMD" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X"/>
  <tstcp/>
  <rsstcd ST_PROG="X" DEVCLASS="$TMP"/>
 </TRAN>
 <TTYP TYPENAME="ZAPCMD_TBL_CHAR" DDLANGUAGE="D" DATATYPE="CHAR" LENG="000255" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" AS4USER="BCUSER" AS4DATE="20071015" AS4TIME="101404" DDTEXT="Tabelle mit Zeichenketten" TYPELEN="000255" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZAPCMD_TBL_FILELIST" DDLANGUAGE="D" ROWTYPE="ZAPCMD_CL_KNOT" ROWKIND="R" DATATYPE="REF" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" AS4USER="BCUSER" AS4DATE="20071008" AS4TIME="104803" DDTEXT="Tabelle mit Dateien und Verzeichnissen" TYPELEN="000008" CTLENG="000000" CTDECIMALS="000000" REFTYPE="C" OCCURS="00000"/>
 <TTYP TYPENAME="ZAPCMD_TBL_FILE_INFO" DDLANGUAGE="D" ROWTYPE="ZAPCMD_FILE_DESCR" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" AS4USER="BCUSER" AS4DATE="20071113" AS4TIME="112742" DDTEXT="Liste mit Dateinformationen" TYPELEN="000704" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZAPCMD_TBL_STRING" DDLANGUAGE="D" DATATYPE="STRG" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" AS4USER="BCUSER" AS4DATE="20071008" AS4TIME="102136" DDTEXT="Tabelle mit Zeichenketten" TYPELEN="000008" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZAPCMD_TBL_XSTRING" DDLANGUAGE="D" DATATYPE="RAW" LENG="001024" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" AS4USER="BCUSER" AS4DATE="20071024" AS4TIME="221520" DDTEXT="Tabelle mit Zeichenketten" TYPELEN="001024" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
</nugget>
